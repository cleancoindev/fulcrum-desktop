{"version":3,"sources":["../../src/api/client.js"],"names":["reqPromise","promisify","req","options","forever","defaultOptions","headers","baseURL","Client","urlForResource","resource","optionsForRequest","account","result","extend","token","authenticate","userName","password","method","uri","auth","username","sendImmediately","resolve","reject","err","response","body","getSync","url","getRoles","getMemberships","getForms","getChoiceLists","getClassificationSets","getProjects","ex","console","log","code","connect","getPhotos","sequence","perPage","qs","per_page","full","getVideos","getAudio","getSignatures","getChangesets","counts","getPhotoURL","media","id","getVideoURL","getAudioURL","getSignatureURL","download","to","rq","pipe","createWriteStream","on","getRecords","form","pageSize","form_id","getRecordsHistory","extents","client"],"mappings":"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","file":"client.js","sourcesContent":["import request from 'request';\nimport Promise from 'bluebird';\nimport _ from 'lodash';\nimport fs from 'fs';\n\nconst reqPromise = Promise.promisify(request);\nconst req = (options) => reqPromise({forever: true, ...options});\n\nconst defaultOptions = {\n  headers: {\n    'User-Agent': 'Fulcrum Sync',\n    'Accept': 'application/json'\n  }\n};\n\n// const baseURL = 'http://localhost:3000';\nconst baseURL = 'https://api.fulcrumapp.com';\n// const baseURL = 'https://edge.fulcrumapp.com';\n\nclass Client {\n  urlForResource(resource) {\n    return '' + baseURL + resource;\n  }\n\n  optionsForRequest(account, options) {\n    const result = _.extend({}, defaultOptions, options);\n    result.headers['X-ApiToken'] = account.token;\n    return result;\n  }\n\n  async authenticate(userName, password) {\n    const options = {\n      method: 'GET',\n      uri: this.urlForResource('/api/v2/users.json'),\n      auth: {\n        username: userName,\n        password: password,\n        sendImmediately: true\n      },\n      headers: defaultOptions.headers\n    };\n\n    return new Promise((resolve, reject) => {\n      request(options, (err, response, body) => {\n        if (err) {\n          return reject(err);\n        } else {\n          return resolve(response);\n        }\n      });\n    });\n  }\n\n  async getSync(account) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/_private/sync.json')\n    });\n\n    return await req(options);\n  }\n\n  async getRoles(account) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/roles.json')\n    });\n\n    return await req(options);\n  }\n\n  async getMemberships(account) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/memberships.json')\n    });\n\n    return await req(options);\n  }\n\n  async getForms(account) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/forms.json')\n    });\n\n    return await req(options);\n  }\n\n  async getChoiceLists(account) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/choice_lists.json')\n    });\n\n    return await req(options);\n  }\n\n  async getClassificationSets(account) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/classification_sets.json')\n    });\n\n    return await req(options);\n  }\n\n  async getProjects(account) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/projects.json')\n    });\n\n    try {\n      return await req(options);\n    } catch (ex) {\n      console.log(ex);\n      console.log(ex.code === 'ETIMEDOUT');\n      console.log(ex.connect === true);\n      throw ex;\n    }\n  }\n\n  async getPhotos(account, sequence, perPage) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/photos.json')\n    });\n\n    options.qs = {\n      per_page: perPage,\n      sequence: sequence || 0,\n      full: '1'\n    };\n\n    return await req(options);\n  }\n\n  async getVideos(account, sequence, perPage) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/videos.json')\n    });\n\n    options.qs = {\n      per_page: perPage,\n      sequence: sequence || 0,\n      full: '1'\n    };\n\n    return await req(options);\n  }\n\n  async getAudio(account, sequence, perPage) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/audio.json')\n    });\n\n    options.qs = {\n      per_page: perPage,\n      sequence: sequence || 0,\n      full: '1'\n    };\n\n    return await req(options);\n  }\n\n  async getSignatures(account, sequence, perPage) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/signatures.json')\n    });\n\n    options.qs = {\n      per_page: perPage,\n      sequence: sequence || 0,\n      full: '1'\n    };\n\n    return await req(options);\n  }\n\n  async getChangesets(account, sequence, perPage) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/changesets.json')\n    });\n\n    options.qs = {\n      per_page: perPage,\n      sequence: sequence || 0,\n      counts: '0'\n    };\n\n    return await req(options);\n  }\n\n  getPhotoURL(account, media) {\n    return this.urlForResource(`/api/v2/photos/${ media.id }?token=${account.token}`);\n  }\n\n  getVideoURL(account, media) {\n    return this.urlForResource(`/api/v2/videos/${ media.id }?token=${account.token}`);\n  }\n\n  getAudioURL(account, media) {\n    return this.urlForResource(`/api/v2/audio/${ media.id }?token=${account.token}`);\n  }\n\n  getSignatureURL(account, media) {\n    return this.urlForResource(`/api/v2/signatures/${ media.id }?token=${account.token}`);\n  }\n\n  download(url, to) {\n    return new Promise((resolve, reject) => {\n      const rq = request(url).pipe(fs.createWriteStream(to));\n      rq.on('close', resolve);\n      rq.on('error', reject);\n    });\n  }\n\n  async getRecords(account, form, sequence, pageSize) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/records.json')\n    });\n\n    options.qs = {\n      form_id: form.id,\n      per_page: pageSize,\n      sequence: sequence || 0\n    };\n\n    return await req(options);\n  }\n\n  async getRecordsHistory(account, form, sequence, pageSize) {\n    const options = this.optionsForRequest(account, {\n      url: this.urlForResource('/api/v2/records/history.json')\n    });\n\n    options.qs = {\n      form_id: form.id,\n      per_page: pageSize,\n      extents: 0,\n      sequence: sequence || 0\n    };\n\n    return await req(options);\n  }\n}\n\nconst client = new Client();\n\nexport default client;\n"]}