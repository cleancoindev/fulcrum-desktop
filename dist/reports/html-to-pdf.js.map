{"version":3,"sources":["../../src/reports/html-to-pdf.js"],"names":["DEFAULT_MARGIN","DEFAULT_PAGE_SIZE","DEFAULT_IMAGE_QUALITY","DEFAULT_ORIENTATION","HtmlToPdf","constructor","html","header","footer","cover","tempID","v4","debug","marginTop","marginBottom","marginLeft","marginRight","pageSize","imageQuality","orientation","binary","command","parts","quietArgument","coverArgument","headerArgument","footerArgument","inputArgument","outputArgument","compact","tempFilePath","part","ext","join","tmpdir","coverPath","writeFileSync","headerPath","footerPath","run","Promise","resolve","reject","cmd","process","stdout","stderr","stdin","setEncoding","end","on","data","push","toString","code","stat","err","size","file","cleanup","files","each"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,MAAMA,iBAAiB,QAAvB;AACA,MAAMC,oBAAoB,QAA1B;AACA,MAAMC,wBAAwB,IAA9B;AACA,MAAMC,sBAAsB,UAA5B;;AAEe,MAAMC,SAAN,CAAgB;AAC7BC,cAAYC,IAAZ,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AACvC,SAAKC,MAAL,GAAc,eAAKC,EAAL,EAAd;AACA,SAAKC,KAAL,GAAa,KAAb;AACA,SAAKN,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKI,SAAL,GAAiBb,cAAjB;AACA,SAAKc,YAAL,GAAoBd,cAApB;AACA,SAAKe,UAAL,GAAkBf,cAAlB;AACA,SAAKgB,WAAL,GAAmBhB,cAAnB;AACA,SAAKiB,QAAL,GAAgBhB,iBAAhB;AACA,SAAKiB,YAAL,GAAoBhB,qBAApB;AACA,SAAKiB,WAAL,GAAmBhB,mBAAnB;AACD;;AAED,MAAIiB,MAAJ,GAAa;AACX,WAAO,4BAAP;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,UAAMC,QAAQ,CACZ,aADY,EACG,KAAKL,QADR,EAEZ,cAFY,EAEI,KAAKJ,SAFT,EAGZ,eAHY,EAGK,KAAKE,UAHV,EAIZ,iBAJY,EAIO,KAAKD,YAJZ,EAKZ,gBALY,EAKM,KAAKE,WALX,EAMZ,iBANY,EAMO,KAAKE,YANZ,EAOZ,eAPY,EAOK,KAAKC,WAPV,EAQZ,YARY,EAQE,OARF,EASZ,KAAKI,aATO,EAUZ,KAAKC,aAVO,EAWZ,KAAKC,cAXO,EAYZ,KAAKC,cAZO,EAaZ,KAAKC,aAbO,EAcZ,KAAKF,cAdO,EAeZ,KAAKC,cAfO,EAgBZ,KAAKE,cAhBO,CAAd;;AAkBA,WAAO,iBAAEC,OAAF,CAAUP,KAAV,CAAP;AACD;;AAEDQ,eAAaC,IAAb,EAAmBC,MAAM,MAAzB,EAAiC;AAC/B,WAAO,eAAKC,IAAL,CAAU,aAAGC,MAAH,EAAV,EAAwB,GAAE,KAAKxB,MAAO,IAAGqB,IAAK,IAAGC,GAAI,EAArD,CAAP;AACD;;AAED,MAAIT,aAAJ,GAAoB;AAClB,WAAO,SAAP;AACA;AACD;;AAED,MAAII,aAAJ,GAAoB;AAClB,WAAO,GAAP;AACD;;AAED,MAAIC,cAAJ,GAAqB;AACnB,WAAO,KAAKE,YAAL,CAAkB,KAAKpB,MAAL,GAAc,SAAhC,EAA2C,KAA3C,CAAP;AACD;;AAED,MAAIc,aAAJ,GAAoB;AAClB,QAAI,KAAKf,KAAT,EAAgB;AACd,YAAM0B,YAAY,KAAKL,YAAL,CAAkB,OAAlB,CAAlB;;AAEA,mBAAGM,aAAH,CAAiBD,SAAjB,EAA4B,KAAK1B,KAAjC;;AAEA,aAAQ,UAAS0B,SAAU,GAA3B;AACD;;AAED,WAAO,IAAP;AACD;;AAED,MAAIV,cAAJ,GAAqB;AACnB,QAAI,KAAKlB,MAAT,EAAiB;AACf,YAAM8B,aAAa,KAAKP,YAAL,CAAkB,QAAlB,CAAnB;;AAEA,mBAAGM,aAAH,CAAiBC,UAAjB,EAA6B,KAAK9B,MAAlC;;AAEA,aAAQ,kBAAiB8B,UAAW,GAApC;AACD;;AAED,WAAO,IAAP;AACD;;AAED,MAAIX,cAAJ,GAAqB;AACnB,QAAI,KAAKlB,MAAT,EAAiB;AACf,YAAM8B,aAAa,KAAKR,YAAL,CAAkB,QAAlB,CAAnB;;AAEA,mBAAGM,aAAH,CAAiBE,UAAjB,EAA6B,KAAK9B,MAAlC;;AAEA,aAAQ,kBAAiB8B,UAAW,GAApC;AACD;;AAED,WAAO,IAAP;AACD;;AAEDC,QAAM;AACJ,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,MAAM,KAAKtB,OAAjB;;AAEA,YAAMuB,UAAU,0BAAM,KAAKxB,MAAX,EAAmBuB,GAAnB,EAAwB,EAAxB,CAAhB;;AAEA,YAAME,SAAS,EAAf;AACA,YAAMC,SAAS,EAAf;;AAEAF,cAAQG,KAAR,CAAcC,WAAd,CAA0B,MAA1B;AACAJ,cAAQG,KAAR,CAAcE,GAAd,CAAkB,KAAK3C,IAAvB;;AAEAsC,cAAQC,MAAR,CAAeK,EAAf,CAAkB,MAAlB,EAA2BC,IAAD,IAAU;AAClCN,eAAOO,IAAP,CAAYD,KAAKE,QAAL,EAAZ;AACD,OAFD;;AAIAT,cAAQE,MAAR,CAAeI,EAAf,CAAkB,MAAlB,EAA2BC,IAAD,IAAU;AAClCL,eAAOM,IAAP,CAAYD,KAAKE,QAAL,EAAZ;AACD,OAFD;;AAIAT,cAAQM,EAAR,CAAW,OAAX,EAAqBI,IAAD,IAAU;AAC5B,qBAAGC,IAAH,CAAQ,KAAK3B,cAAb,EAA6B,CAAC4B,GAAD,EAAMD,IAAN,KAAe;AAC1C,cAAIC,GAAJ,EAAS;AACP,mBAAOd,OAAOc,GAAP,CAAP;AACD;;AAED,iBAAOf,QAAQ,EAACa,MAAMA,IAAP;AACCT,oBAAQA,MADT;AAECC,oBAAQA,MAFT;AAGCW,kBAAMF,KAAKE,IAHZ;AAICC,kBAAM,KAAK9B,cAJZ,EAAR,CAAP;AAKD,SAVD;AAWD,OAZD;AAaD,KAhCM,CAAP;AAiCD;;AAED+B,YAAU;AACR,UAAMC,QAAQ,CACZ,KAAK9B,YAAL,CAAkB,QAAlB,CADY,EAEZ,KAAKA,YAAL,CAAkB,OAAlB,CAFY,EAGZ,KAAKA,YAAL,CAAkB,SAAlB,CAHY,EAIZ,KAAKA,YAAL,CAAkB,QAAlB,CAJY,EAKZ,KAAKA,YAAL,CAAkB,KAAlB,EAAyB,KAAzB,CALY,EAMZ,KAAKA,YAAL,CAAkB,QAAlB,EAA4B,KAA5B,CANY,CAAd;;AASA,WAAO,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,sBAAMmB,IAAN,CAAWD,KAAX,oBAA2BJ,GAAD,IAAS;AACjC,YAAIA,GAAJ,EAAS;AACP,iBAAOd,OAAOc,GAAP,CAAP;AACD,SAFD,MAEO;AACL,iBAAOf,SAAP;AACD;AACF,OAND;AAOD,KARM,CAAP;AASD;AAvJ4B;kBAAVrC,S","file":"html-to-pdf.js","sourcesContent":["import uuid from 'uuid';\nimport _ from 'lodash';\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport { spawn } from 'child_process';\nimport async from 'async';\nimport rimraf from 'rimraf';\n\nconst DEFAULT_MARGIN = '0.75in';\nconst DEFAULT_PAGE_SIZE = 'Letter';\nconst DEFAULT_IMAGE_QUALITY = '85';\nconst DEFAULT_ORIENTATION = 'Portrait';\n\nexport default class HtmlToPdf {\n  constructor(html, header, footer, cover) {\n    this.tempID = uuid.v4();\n    this.debug = false;\n    this.html = html;\n    this.header = header;\n    this.footer = footer;\n    this.cover = cover;\n    this.marginTop = DEFAULT_MARGIN;\n    this.marginBottom = DEFAULT_MARGIN;\n    this.marginLeft = DEFAULT_MARGIN;\n    this.marginRight = DEFAULT_MARGIN;\n    this.pageSize = DEFAULT_PAGE_SIZE;\n    this.imageQuality = DEFAULT_IMAGE_QUALITY;\n    this.orientation = DEFAULT_ORIENTATION;\n  }\n\n  get binary() {\n    return '/usr/local/bin/wkhtmltopdf';\n  }\n\n  get command() {\n    const parts = [\n      '--page-size', this.pageSize,\n      '--margin-top', this.marginTop,\n      '--margin-left', this.marginLeft,\n      '--margin-bottom', this.marginBottom,\n      '--margin-right', this.marginRight,\n      '--image-quality', this.imageQuality,\n      '--orientation', this.orientation,\n      '--encoding', 'UTF-8',\n      this.quietArgument,\n      this.coverArgument,\n      this.headerArgument,\n      this.footerArgument,\n      this.inputArgument,\n      this.headerArgument,\n      this.footerArgument,\n      this.outputArgument ];\n\n    return _.compact(parts);\n  }\n\n  tempFilePath(part, ext = 'html') {\n    return path.join(os.tmpdir(), `${this.tempID}_${part}.${ext}`);\n  }\n\n  get quietArgument() {\n    return '--quiet';\n    // return this.debug ? null : '--quiet';\n  }\n\n  get inputArgument() {\n    return '-';\n  }\n\n  get outputArgument() {\n    return this.tempFilePath(this.tempID + '_output', 'pdf');\n  }\n\n  get coverArgument() {\n    if (this.cover) {\n      const coverPath = this.tempFilePath('cover');\n\n      fs.writeFileSync(coverPath, this.cover);\n\n      return `cover \"${coverPath}\"`;\n    }\n\n    return null;\n  }\n\n  get headerArgument() {\n    if (this.header) {\n      const headerPath = this.tempFilePath('header');\n\n      fs.writeFileSync(headerPath, this.header);\n\n      return `--header-html \"${headerPath}\"`;\n    }\n\n    return null;\n  }\n\n  get footerArgument() {\n    if (this.footer) {\n      const footerPath = this.tempFilePath('footer');\n\n      fs.writeFileSync(footerPath, this.footer);\n\n      return `--footer-html \"${footerPath}\"`;\n    }\n\n    return null;\n  }\n\n  run() {\n    return new Promise((resolve, reject) => {\n      const cmd = this.command;\n\n      const process = spawn(this.binary, cmd, {});\n\n      const stdout = [];\n      const stderr = [];\n\n      process.stdin.setEncoding('utf8');\n      process.stdin.end(this.html);\n\n      process.stdout.on('data', (data) => {\n        stdout.push(data.toString());\n      });\n\n      process.stderr.on('data', (data) => {\n        stderr.push(data.toString());\n      });\n\n      process.on('close', (code) => {\n        fs.stat(this.outputArgument, (err, stat) => {\n          if (err) {\n            return reject(err);\n          }\n\n          return resolve({code: code,\n                          stdout: stdout,\n                          stderr: stderr,\n                          size: stat.size,\n                          file: this.outputArgument});\n        });\n      });\n    });\n  }\n\n  cleanup() {\n    const files = [\n      this.tempFilePath('header'),\n      this.tempFilePath('cover'),\n      this.tempFilePath('content'),\n      this.tempFilePath('footer'),\n      this.tempFilePath('toc', 'xml'),\n      this.tempFilePath('output', 'pdf')\n    ];\n\n    return new Promise((resolve, reject) => {\n      async.each(files, rimraf, (err) => {\n        if (err) {\n          return reject(err);\n        } else {\n          return resolve();\n        }\n      });\n    });\n  }\n}\n"]}