{"version":3,"sources":["../src/app.js"],"names":["app","App","instance","constructor","_plugins","_listeners","on","name","func","push","off","index","indexOf","splice","emit","args","listener","initialize","initializePlugins","pluginPaths","sync","join","pluginPath","fullPath","resolve","PluginClass","require","default","plugin","enabled","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAIA,MAAM,IAAV;;AAEA,MAAMC,GAAN,CAAU;AACR,aAAWC,QAAX,GAAsB;AACpB,WAAOF,GAAP;AACD;;AAEDG,gBAAc;AACZ,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAEDC,KAAGC,IAAH,EAASC,IAAT,EAAe;AACb,QAAI,CAAC,KAAKH,UAAL,CAAgBE,IAAhB,CAAL,EAA4B;AAC1B,WAAKF,UAAL,CAAgBE,IAAhB,IAAwB,EAAxB;AACD;;AAED,SAAKF,UAAL,CAAgBE,IAAhB,EAAsBE,IAAtB,CAA2BD,IAA3B;AACD;;AAEDE,MAAIH,IAAJ,EAAUC,IAAV,EAAgB;AACd,QAAI,KAAKH,UAAL,CAAgBE,IAAhB,CAAJ,EAA2B;AACzB,YAAMI,QAAQ,KAAKN,UAAL,CAAgBO,OAAhB,CAAwBJ,IAAxB,CAAd;;AAEA,UAAIG,QAAQ,CAAC,CAAb,EAAgB;AACd,aAAKN,UAAL,CAAgBQ,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACD;AACF;AACF;;AAEKG,MAAN,CAAWP,IAAX,EAAiB,GAAGQ,IAApB,EAA0B;AAAA;;AAAA;AACxB,UAAI,MAAKV,UAAL,CAAgBE,IAAhB,CAAJ,EAA2B;AACzB,aAAK,MAAMS,QAAX,IAAuB,MAAKX,UAAL,CAAgBE,IAAhB,CAAvB,EAA8C;AAC5C,gBAAMS,SAAS,GAAGD,IAAZ,CAAN;AACD;AACF;AALuB;AAMzB;;AAEKE,YAAN,GAAmB;AAAA;;AAAA;AACjB,YAAM,OAAKC,iBAAL,EAAN;AADiB;AAElB;;AAEKA,mBAAN,GAA0B;AAAA;;AAAA;AACxB,YAAMC,cAAc,eAAKC,IAAL,CAAU,eAAKC,IAAL,CAAU,GAAV,EAAe,SAAf,EAA0B,GAA1B,EAA+B,WAA/B,CAAV,CAApB;;AAEA,WAAK,MAAMC,UAAX,IAAyBH,WAAzB,EAAsC;AACpC,cAAMI,WAAW,eAAKC,OAAL,CAAaF,UAAb,CAAjB;;AAEA,cAAMG,cAAcC,QAAQH,QAAR,EAAkBI,OAAtC;;AAEA,cAAMC,SAAS,IAAIH,WAAJ,EAAf;;AAEA,YAAIG,OAAOC,OAAX,EAAoB;AAClBC,kBAAQC,GAAR,CAAY,gBAAZ,EAA8BR,QAA9B;;AAEA,gBAAMK,OAAOX,UAAP,CAAkB,EAACjB,WAAD,EAAlB,CAAN;;AAEA,iBAAKI,QAAL,CAAcK,IAAd,CAAmBmB,MAAnB;AACD;AACF;AAjBuB;AAkBzB;;AAED;AACA;AACA;AA9DQ;;AAiEV5B,MAAM,IAAIC,GAAJ,EAAN;;kBAEeD,G","file":"app.js","sourcesContent":["import EventEmitter from 'events';\nimport glob from 'glob';\nimport path from 'path';\n\nlet app = null;\n\nclass App {\n  static get instance() {\n    return app;\n  }\n\n  constructor() {\n    this._plugins = [];\n    this._listeners = {};\n  }\n\n  on(name, func) {\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n\n    this._listeners[name].push(func);\n  }\n\n  off(name, func) {\n    if (this._listeners[name]) {\n      const index = this._listeners.indexOf(func);\n\n      if (index > -1) {\n        this._listeners.splice(index, 1);\n      }\n    }\n  }\n\n  async emit(name, ...args) {\n    if (this._listeners[name]) {\n      for (const listener of this._listeners[name]) {\n        await listener(...args);\n      }\n    }\n  }\n\n  async initialize() {\n    await this.initializePlugins();\n  }\n\n  async initializePlugins() {\n    const pluginPaths = glob.sync(path.join('.', 'plugins', '*', 'plugin.js'));\n\n    for (const pluginPath of pluginPaths) {\n      const fullPath = path.resolve(pluginPath);\n\n      const PluginClass = require(fullPath).default;\n\n      const plugin = new PluginClass();\n\n      if (plugin.enabled) {\n        console.log('Loading plugin', fullPath);\n\n        await plugin.initialize({app: this});\n\n        this._plugins.push(plugin);\n      }\n    }\n  }\n\n  // emit(name, ...args) {\n  //   this.emit(name, {app: this, ...args[0]});\n  // }\n}\n\napp = new App();\n\nexport default app;\n"]}