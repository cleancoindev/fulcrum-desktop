{"version":3,"sources":["../../src/commands/query.js"],"names":["QueryCommand","run","headers","db","each","args","sql","columns","row","index","process","stdout","write","stringify","map","c","name","start"],"mappings":";;AAAA;;;;AACA;;;;;;;;AAEA,MAAMA,YAAN,2BAAmC;AAC3BC,KAAN,GAAY;AAAA;;AAAA;AACV,UAAIC,UAAU,KAAd;;AAEA,YAAM,MAAKC,EAAL,CAAQC,IAAR,CAAa,MAAKC,IAAL,CAAUC,GAAvB,EAA4B,EAA5B,EAAgC,UAACC,OAAD,EAAUC,GAAV,EAAeC,KAAf,EAAyB;AAC7D,YAAI,CAACP,OAAL,EAAc;AACZA,oBAAU,IAAV;AACAQ,kBAAQC,MAAR,CAAeC,KAAf,CAAqB,oBAAIC,SAAJ,CAAcN,QAAQO,GAAR,CAAY;AAAA,mBAAKC,EAAEC,IAAP;AAAA,WAAZ,CAAd,CAArB;AACD;;AAED,YAAIR,GAAJ,EAAS;AACPE,kBAAQC,MAAR,CAAeC,KAAf,CAAqB,oBAAIC,SAAJ,CAAcL,GAAd,CAArB;AACD;AACF,OATK,CAAN;AAHU;AAaX;AAdgC;;AAiBnC,IAAIR,YAAJ,GAAmBiB,KAAnB","file":"query.js","sourcesContent":["import Command from './command';\nimport CSV from 'csv-string';\n\nclass QueryCommand extends Command {\n  async run() {\n    let headers = false;\n\n    await this.db.each(this.args.sql, {}, (columns, row, index) => {\n      if (!headers) {\n        headers = true;\n        process.stdout.write(CSV.stringify(columns.map(c => c.name)));\n      }\n\n      if (row) {\n        process.stdout.write(CSV.stringify(row));\n      }\n    });\n  }\n}\n\nnew QueryCommand().start();\n"]}