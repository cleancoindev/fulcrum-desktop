{"version":3,"sources":["../../src/commands/sync.js"],"names":["Sync","run","accounts","fetchAccount","args","org","account","dataSource","createDataSource","instance","form","start"],"mappings":";;AAAA;;;;AACA;;;;;;;;AAEA,MAAMA,IAAN,2BAA2B;AACnBC,KAAN,GAAY;AAAA;;AAAA;AACV,YAAMC,WAAW,MAAM,MAAKC,YAAL,CAAkB,MAAKC,IAAL,CAAUC,GAA5B,CAAvB;;AAEA,WAAK,MAAMC,OAAX,IAAsBJ,QAAtB,EAAgC;AAC9B,cAAMK,aAAa,MAAM,MAAKC,gBAAL,CAAsBF,OAAtB,CAAzB;;AAEA,cAAM,uBAAaG,QAAb,CAAsBR,GAAtB,CAA0BK,OAA1B,EAAmC,MAAKF,IAAL,CAAUM,IAA7C,EAAmDH,UAAnD,CAAN;AACD;AAPS;AAQX;AATwB;;AAY3B,IAAIP,IAAJ,GAAWW,KAAX","file":"sync.js","sourcesContent":["import Command from './command';\nimport Synchronizer from '../synchronizer';\n\nclass Sync extends Command {\n  async run() {\n    const accounts = await this.fetchAccount(this.args.org);\n\n    for (const account of accounts) {\n      const dataSource = await this.createDataSource(account);\n\n      await Synchronizer.instance.run(account, this.args.form, dataSource);\n    }\n  }\n}\n\nnew Sync().start();\n"]}