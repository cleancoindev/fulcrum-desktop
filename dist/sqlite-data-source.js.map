{"version":3,"sources":["../src/sqlite-data-source.js"],"names":["LocalDatabaseDataSource","constructor","account","db","choiceLists","classificationSets","forms","load","loadObjects","type","objects","findAll","map","object","id","getChoiceList","callback","getClassificationSet","getForm"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEe,MAAMA,uBAAN,CAA8B;AAC3CC,cAAYC,OAAZ,EAAqB;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,EAAL,GAAUD,QAAQC,EAAlB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEKC,MAAN,CAAWJ,EAAX,EAAe;AAAA;;AAAA;AACb,YAAKC,WAAL,GAAmB,MAAM,MAAKI,WAAL,CAAiBL,EAAjB,uBAAzB;AACA,YAAKE,kBAAL,GAA0B,MAAM,MAAKG,WAAL,CAAiBL,EAAjB,8BAAhC;AACA,YAAKG,KAAL,GAAa,MAAM,MAAKE,WAAL,CAAiBL,EAAjB,iBAAnB;AAHa;AAId;;AAEKK,aAAN,CAAkBL,EAAlB,EAAsBM,IAAtB,EAA4B;AAAA;AAC1B,YAAMC,UAAU,MAAMD,KAAKE,OAAL,CAAaR,EAAb,CAAtB;;AAEA,YAAMS,MAAM,EAAZ;;AAEA,WAAK,MAAMC,MAAX,IAAqBH,OAArB,EAA8B;AAC5BE,YAAIC,OAAOC,EAAX,IAAiBD,MAAjB;AACD;;AAED,aAAOD,GAAP;AAT0B;AAU3B;;AAEDG,gBAAcD,EAAd,EAAkBE,QAAlB,EAA4B;AAC1B,WAAOA,SAAS,IAAT,EAAe,KAAKZ,WAAL,CAAiBU,EAAjB,CAAf,CAAP;AACD;;AAEDG,uBAAqBH,EAArB,EAAyBE,QAAzB,EAAmC;AACjC,WAAOA,SAAS,IAAT,EAAe,KAAKX,kBAAL,CAAwBS,EAAxB,CAAf,CAAP;AACD;;AAEDI,UAAQJ,EAAR,EAAYE,QAAZ,EAAsB;AACpB,WAAOA,SAAS,IAAT,EAAe,KAAKV,KAAL,CAAWQ,EAAX,CAAf,CAAP;AACD;AArC0C;kBAAxBd,uB","file":"sqlite-data-source.js","sourcesContent":["import Form from './models/form';\nimport ChoiceList from './models/choice-list';\nimport ClassificationSet from './models/classification-set';\n\nexport default class LocalDatabaseDataSource {\n  constructor(account) {\n    this.account = account;\n    this.db = account.db;\n    this.choiceLists = {};\n    this.classificationSets = {};\n    this.forms = {};\n  }\n\n  async load(db) {\n    this.choiceLists = await this.loadObjects(db, ChoiceList);\n    this.classificationSets = await this.loadObjects(db, ClassificationSet);\n    this.forms = await this.loadObjects(db, Form);\n  }\n\n  async loadObjects(db, type) {\n    const objects = await type.findAll(db);\n\n    const map = {};\n\n    for (const object of objects) {\n      map[object.id] = object;\n    }\n\n    return map;\n  }\n\n  getChoiceList(id, callback) {\n    return callback(null, this.choiceLists[id]);\n  }\n\n  getClassificationSet(id, callback) {\n    return callback(null, this.classificationSets[id]);\n  }\n\n  getForm(id, callback) {\n    return callback(null, this.forms[id]);\n  }\n}\n\n"]}