{"version":3,"sources":["../../src/models/photo.js"],"names":["Photo","tableName","columns","name","column","type","null","id","_id","updateFromAPIAttributes","attributes","access_key","_exif","exif","_createdAt","parseISOTimestamp","created_at","_updatedAt","updated_at","isDownloaded","_isDownloaded","value","register"],"mappings":";;;;;;AAAA;;AACA;;AAEe,MAAMA,KAAN,CAAY;AACzB,aAAWC,SAAX,GAAuB;AACrB,WAAO,QAAP;AACD;;AAED,aAAWC,OAAX,GAAqB;AACnB,WAAO,CACL,EAAEC,MAAM,cAAR,EAAwBC,QAAQ,YAAhC,EAA8CC,MAAM,SAApD,EAA+DC,MAAM,KAArE,EADK,EAEL,EAAEH,MAAM,IAAR,EAAcC,QAAQ,aAAtB,EAAqCC,MAAM,QAA3C,EAAqDC,MAAM,KAA3D,EAFK,EAGL,EAAEH,MAAM,MAAR,EAAgBC,QAAQ,MAAxB,EAAgCC,MAAM,MAAtC,EAHK,EAIL,EAAEF,MAAM,UAAR,EAAoBC,QAAQ,WAA5B,EAAyCC,MAAM,QAA/C,EAJK,EAKL,EAAEF,MAAM,cAAR,EAAwBC,QAAQ,eAAhC,EAAiDC,MAAM,SAAvD,EAAkEC,MAAM,KAAxE,EALK,EAML,EAAEH,MAAM,UAAR,EAAoBC,QAAQ,UAA5B,EAAwCC,MAAM,QAA9C,EANK,EAOL,EAAEF,MAAM,WAAR,EAAqBC,QAAQ,WAA7B,EAA0CC,MAAM,QAAhD,EAPK,EAQL,EAAEF,MAAM,WAAR,EAAqBC,QAAQ,SAA7B,EAAwCC,MAAM,SAA9C,EARK,EASL,EAAEF,MAAM,aAAR,EAAuBC,QAAQ,WAA/B,EAA4CC,MAAM,SAAlD,EATK,CAAP;AAWD;;AAED,MAAIE,EAAJ,GAAS;AACP,WAAO,KAAKC,GAAZ;AACD;;AAEDC,0BAAwBC,UAAxB,EAAoC;AAClC,SAAKF,GAAL,GAAWE,WAAWC,UAAtB;AACA,SAAKC,KAAL,GAAaF,WAAWG,IAAxB;AACA,SAAKC,UAAL,GAAkB,uBAAUC,iBAAV,CAA4BL,WAAWM,UAAvC,CAAlB;AACA,SAAKC,UAAL,GAAkB,uBAAUF,iBAAV,CAA4BL,WAAWQ,UAAvC,CAAlB;AACD;;AAED,MAAIC,YAAJ,GAAmB;AACjB,WAAO,KAAKC,aAAZ;AACD;;AAED,MAAID,YAAJ,CAAiBE,KAAjB,EAAwB;AACtB,SAAKD,aAAL,GAAqB,CAAC,CAACC,KAAvB;AACD;AApCwB;;kBAANrB,K;AAuCrB,yBAAiBsB,QAAjB,CAA0BtB,KAA1B","file":"photo.js","sourcesContent":["import { PersistentObject } from 'minidb';\nimport { DateUtils } from 'fulcrum-core';\n\nexport default class Photo {\n  static get tableName() {\n    return 'photos';\n  }\n\n  static get columns() {\n    return [\n      { name: 'accountRowID', column: 'account_id', type: 'integer', null: false },\n      { name: 'id', column: 'resource_id', type: 'string', null: false },\n      { name: 'exif', column: 'exif', type: 'json' },\n      { name: 'filePath', column: 'file_path', type: 'string' },\n      { name: 'isDownloaded', column: 'is_downloaded', type: 'boolean', null: false },\n      { name: 'latitude', column: 'latitude', type: 'double' },\n      { name: 'longitude', column: 'longitude', type: 'double' },\n      { name: 'formRowID', column: 'form_id', type: 'integer' },\n      { name: 'recordRowID', column: 'record_id', type: 'integer' }\n    ];\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  updateFromAPIAttributes(attributes) {\n    this._id = attributes.access_key;\n    this._exif = attributes.exif;\n    this._createdAt = DateUtils.parseISOTimestamp(attributes.created_at);\n    this._updatedAt = DateUtils.parseISOTimestamp(attributes.updated_at);\n  }\n\n  get isDownloaded() {\n    return this._isDownloaded;\n  }\n\n  set isDownloaded(value) {\n    this._isDownloaded = !!value;\n  }\n}\n\nPersistentObject.register(Photo);\n"]}