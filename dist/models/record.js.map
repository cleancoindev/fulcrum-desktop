{"version":3,"sources":["../../src/models/record.js"],"names":["Record","tableName","columns","name","column","type","null","afterSave","options","statements","updateForRecordStatements","db","execute","map","o","sql","join","beforeSave","indexText","formValues","searchableValue","beforeDelete","deleteForRecordStatements","form","getForm","loadOne","_form","setOne","register"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;AAEe,MAAMA,MAAN,6BAAgC;AAC7C,aAAWC,SAAX,GAAuB;AACrB,WAAO,SAAP;AACD;;AAED,aAAWC,OAAX,GAAqB;AACnB,WAAO,CACL,EAAEC,MAAM,cAAR,EAAwBC,QAAQ,YAAhC,EAA8CC,MAAM,SAApD,EAA+DC,MAAM,KAArE,EADK,EAEL,EAAEH,MAAM,IAAR,EAAcC,QAAQ,aAAtB,EAAqCC,MAAM,QAA3C,EAAqDC,MAAM,KAA3D,EAFK,EAGL,EAAEH,MAAM,gBAAR,EAA0BC,QAAQ,aAAlC,EAAiDC,MAAM,MAAvD,EAA+DC,MAAM,KAArE,EAHK,EAIL,EAAEH,MAAM,iBAAR,EAA2BC,QAAQ,mBAAnC,EAAwDC,MAAM,UAA9D,EAJK,EAKL,EAAEF,MAAM,iBAAR,EAA2BC,QAAQ,mBAAnC,EAAwDC,MAAM,UAA9D,EALK,EAML,EAAEF,MAAM,QAAR,EAAkBC,QAAQ,QAA1B,EAAoCC,MAAM,QAA1C,EANK,EAOL,EAAEF,MAAM,WAAR,EAAqBC,QAAQ,SAA7B,EAAwCC,MAAM,SAA9C,EAPK,EAQL,EAAEF,MAAM,cAAR,EAAwBC,QAAQ,YAAhC,EAA8CC,MAAM,SAApD,EARK,EASL,EAAEF,MAAM,SAAR,EAAmBC,QAAQ,SAA3B,EAAsCC,MAAM,SAA5C,EAAuDC,MAAM,KAA7D,EATK,EAUL,EAAEH,MAAM,YAAR,EAAsBC,QAAQ,aAA9B,EAA6CC,MAAM,SAAnD,EAVK,EAWL,EAAEF,MAAM,WAAR,EAAqBC,QAAQ,YAA7B,EAA2CC,MAAM,QAAjD,EAXK,CAAP;AAaD;;AAEKE,WAAN,CAAgBC,OAAhB,EAAyB;AAAA;;AAAA;AACvB,YAAMC,aAAa,6BAAmBC,yBAAnB,CAA6C,MAAKC,EAAlD,QAAnB;;AAEA,YAAM,MAAKA,EAAL,CAAQC,OAAR,CAAgBH,WAAWI,GAAX,CAAe;AAAA,eAAKC,EAAEC,GAAP;AAAA,OAAf,EAA2BC,IAA3B,CAAgC,IAAhC,CAAhB,CAAN;AAHuB;AAIxB;;AAEKC,YAAN,CAAiBT,OAAjB,EAA0B;AAAA;;AAAA;AACxB,aAAKU,SAAL,GAAiB,OAAKC,UAAL,CAAgBC,eAAjC;AADwB;AAEzB;;AAEKC,cAAN,CAAmBb,OAAnB,EAA4B;AAAA;;AAAA;AAC1B,YAAMC,aAAa,6BAAmBa,yBAAnB,CAA6C,OAAKX,EAAlD,UAA4D,OAAKY,IAAjE,CAAnB;;AAEA,YAAM,OAAKZ,EAAL,CAAQC,OAAR,CAAgBH,WAAWI,GAAX,CAAe;AAAA,eAAKC,EAAEC,GAAP;AAAA,OAAf,EAA2BC,IAA3B,CAAgC,IAAhC,CAAhB,CAAN;AAH0B;AAI3B;;AAEDQ,YAAU;AACR,WAAO,KAAKC,OAAL,CAAa,MAAb,iBAAP;AACD;;AAED,MAAIF,IAAJ,GAAW;AACT,WAAO,KAAKG,KAAZ;AACD;;AAED,MAAIH,IAAJ,CAASA,IAAT,EAAe;AACb,SAAKI,MAAL,CAAY,MAAZ,EAAoBJ,IAApB;AACD;AA/C4C;;kBAA1BvB,M;AAkDrB,yBAAiB4B,QAAjB,CAA0B5B,MAA1B","file":"record.js","sourcesContent":["import { PersistentObject } from 'minidb';\nimport { Record as RecordBase } from 'fulcrum-core';\nimport SQLiteRecordValues from './record-values/sqlite-record-values';\nimport Form from './form';\n\nexport default class Record extends RecordBase {\n  static get tableName() {\n    return 'records';\n  }\n\n  static get columns() {\n    return [\n      { name: 'accountRowID', column: 'account_id', type: 'integer', null: false },\n      { name: 'id', column: 'resource_id', type: 'string', null: false },\n      { name: 'formValuesJSON', column: 'form_values', type: 'json', null: false },\n      { name: 'clientCreatedAt', column: 'client_created_at', type: 'datetime' },\n      { name: 'clientUpdatedAt', column: 'client_updated_at', type: 'datetime' },\n      { name: 'status', column: 'status', type: 'string' },\n      { name: 'formRowID', column: 'form_id', type: 'integer' },\n      { name: 'projectRowID', column: 'project_id', type: 'integer' },\n      { name: 'version', column: 'version', type: 'integer', null: false },\n      { name: 'hasChanges', column: 'has_changes', type: 'boolean' },\n      { name: 'indexText', column: 'index_text', type: 'string' }\n    ];\n  }\n\n  async afterSave(options) {\n    const statements = SQLiteRecordValues.updateForRecordStatements(this.db, this);\n\n    await this.db.execute(statements.map(o => o.sql).join('\\n'));\n  }\n\n  async beforeSave(options) {\n    this.indexText = this.formValues.searchableValue;\n  }\n\n  async beforeDelete(options) {\n    const statements = SQLiteRecordValues.deleteForRecordStatements(this.db, this, this.form);\n\n    await this.db.execute(statements.map(o => o.sql).join('\\n'));\n  }\n\n  getForm() {\n    return this.loadOne('form', Form);\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  set form(form) {\n    this.setOne('form', form);\n  }\n}\n\nPersistentObject.register(Record);\n"]}