{"version":3,"sources":["../../src/models/record.js"],"names":["Record","tableName","columns","name","column","type","null","databaseValues","db","values","prototype","call","has_changes","title","displayValue","afterSave","options","statements","updateForRecordStatements","execute","map","o","sql","join","beforeSave","_indexText","formValues","searchableValue","beforeDelete","deleteForRecordStatements","form","getForm","loadOne","_form","setOne","queryRowToAttributes","row","attributes","id","_record_id","project_id","_project_id","assigned_to_id","_assigned_to_id","status","_status","latitude","_latitude","longitude","_longitude","client_created_at","Date","_created_at","client_updated_at","_updated_at","version","_version","created_by_id","_created_by_id","updated_by_id","_updated_by_id","created_at","_server_created_at","updated_at","_server_updated_at","altitude","_altitude","speed","_speed","course","_course","horizontal_accuracy","_horizontal_accuracy","vertical_accuracy","_vertical_accuracy","form_values","JSON","parse","_form_values","changeset_id","_changeset_id","created_latitude","_created_latitude","created_longitude","_created_longitude","created_geometry","_created_geometry","created_altitude","_created_altitude","created_horizontal_accuracy","_created_horizontal_accuracy","updated_latitude","_updated_latitude","updated_longitude","_updated_longitude","updated_geometry","_updated_geometry","updated_altitude","_updated_altitude","updated_horizontal_accuracy","_updated_horizontal_accuracy","created_duration","_created_duration","updated_duration","_updated_duration","edited_duration","_edited_duration","register"],"mappings":"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","file":"record.js","sourcesContent":["import { PersistentObject } from 'minidb';\nimport { Record as RecordBase } from 'fulcrum-core';\nimport SQLiteRecordValues from './record-values/sqlite-record-values';\nimport Form from './form';\n\nexport default class Record extends RecordBase {\n  static get tableName() {\n    return 'records';\n  }\n\n  static get columns() {\n    return [\n      { name: 'accountRowID', column: 'account_id', type: 'integer', null: false },\n      { name: 'id', column: 'resource_id', type: 'string', null: false },\n      { name: 'formValuesJSON', column: 'form_values', type: 'json', null: false },\n      { name: 'clientCreatedAt', column: 'client_created_at', type: 'datetime' },\n      { name: 'clientUpdatedAt', column: 'client_updated_at', type: 'datetime' },\n      { name: 'status', column: 'status', type: 'string' },\n      { name: 'latitude', column: 'latitude', type: 'double' },\n      { name: 'longitude', column: 'longitude', type: 'double' },\n      { name: 'altitude', column: 'altitude', type: 'double' },\n      { name: 'speed', column: 'speed', type: 'double' },\n      { name: 'course', column: 'course', type: 'double' },\n      { name: 'horizontalAccuracy', column: 'horizontal_accuracy', type: 'double' },\n      { name: 'verticalAccuracy', column: 'vertical_accuracy', type: 'double' },\n      { name: 'formRowID', column: 'form_id', type: 'integer' },\n      { name: 'projectRowID', column: 'project_id', type: 'integer' },\n      { name: 'projectID', column: 'project_resource_id', type: 'string' },\n      { name: 'assignedToRowID', column: 'assigned_to_id', type: 'integer' },\n      { name: 'assignedToID', column: 'assigned_to_resource_id', type: 'string' },\n      { name: 'updatedByRowID', column: 'updated_by_id', type: 'integer' },\n      { name: 'updatedByID', column: 'updated_by_resource_id', type: 'string' },\n      { name: 'createdByRowID', column: 'created_by_id', type: 'integer' },\n      { name: 'createdByID', column: 'created_by_resource_id', type: 'string' },\n      { name: 'changesetRowID', column: 'changeset_id', type: 'integer' },\n      { name: 'changesetID', column: 'changeset_resource_id', type: 'string' },\n      { name: 'version', column: 'version', type: 'integer', null: false },\n      { name: 'hasChanges', column: 'has_changes', type: 'boolean' },\n      { name: 'indexText', column: 'index_text', type: 'string' },\n      { name: 'title', column: 'title', type: 'string' },\n      { name: 'createdDuration', column: 'created_duration', type: 'integer' },\n      { name: 'updatedDuration', column: 'updated_duration', type: 'integer' },\n      { name: 'editedDuration', column: 'edited_duration', type: 'integer' },\n      { name: 'updatedLatitude', column: 'updated_latitude', type: 'double' },\n      { name: 'updatedLongitude', column: 'updated_longitude', type: 'double' },\n      { name: 'updatedAltitude', column: 'updated_altitude', type: 'double' },\n      { name: 'updatedAccuracy', column: 'updated_accuracy', type: 'double' },\n      { name: 'createdLatitude', column: 'created_latitude', type: 'double' },\n      { name: 'createdLongitude', column: 'created_longitude', type: 'double' },\n      { name: 'createdAltitude', column: 'created_altitude', type: 'double' },\n      { name: 'createdAccuracy', column: 'created_accuracy', type: 'double' }\n    ];\n  }\n\n  databaseValues(db) {\n    const values = PersistentObject.prototype.databaseValues.call(this);\n\n    if (values.has_changes == null) {\n      values.has_changes = false;\n    }\n\n    values.title = this.displayValue;\n\n    return values;\n  }\n\n  async afterSave(options) {\n    const statements = SQLiteRecordValues.updateForRecordStatements(this.db, this);\n\n    await this.db.execute(statements.map(o => o.sql).join('\\n'));\n  }\n\n  async beforeSave(options) {\n    this._indexText = this.formValues.searchableValue;\n  }\n\n  async beforeDelete(options) {\n    const statements = SQLiteRecordValues.deleteForRecordStatements(this.db, this, this.form);\n\n    await this.db.execute(statements.map(o => o.sql).join('\\n'));\n  }\n\n  getForm() {\n    return this.loadOne('form', Form);\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  set form(form) {\n    this.setOne('form', form);\n  }\n\n  static queryRowToAttributes(row) {\n    const attributes = {\n      id: row._record_id,\n      project_id: row._project_id,\n      assigned_to_id: row._assigned_to_id,\n      status: row._status,\n      latitude: row._latitude,\n      longitude: row._longitude,\n      client_created_at: new Date(row._created_at),\n      client_updated_at: new Date(row._updated_at),\n      version: row._version,\n      created_by_id: row._created_by_id,\n      updated_by_id: row._updated_by_id,\n      created_at: new Date(row._server_created_at),\n      updated_at: new Date(row._server_updated_at),\n      altitude: row._altitude,\n      speed: row._speed,\n      course: row._course,\n      horizontal_accuracy: row._horizontal_accuracy,\n      vertical_accuracy: row._vertical_accuracy,\n      form_values: JSON.parse(row._form_values),\n      changeset_id: row._changeset_id,\n      created_latitude: row._created_latitude,\n      created_longitude: row._created_longitude,\n      created_geometry: row._created_geometry,\n      created_altitude: row._created_altitude,\n      created_horizontal_accuracy: row._created_horizontal_accuracy,\n      updated_latitude: row._updated_latitude,\n      updated_longitude: row._updated_longitude,\n      updated_geometry: row._updated_geometry,\n      updated_altitude: row._updated_altitude,\n      updated_horizontal_accuracy: row._updated_horizontal_accuracy,\n      created_duration: row._created_duration,\n      updated_duration: row._updated_duration,\n      edited_duration: row._edited_duration\n    };\n\n    return attributes;\n  }\n}\n\nPersistentObject.register(Record);\n"]}