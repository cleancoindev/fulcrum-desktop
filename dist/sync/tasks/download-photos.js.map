{"version":3,"sources":["../../../src/sync/tasks/download-photos.js"],"names":["DownloadPhotos","constructor","form","args","run","account","dataSource","downloadPhotosPage","_lastSync","page","total","lastSync","beginFetchTime","Date","db","progress","message","downloading","name","blue","yellow","results","getPhotos","totalFetchTime","getTime","data","JSON","parse","body","objects","photos","now","processing","total_pages","count","length","transaction","database","index","attributes","object","findOrCreate","account_id","rowID","resource_id","access_key","updateFromAPIAttributes","processed","isDownloaded","save","totalTime","finished","cyan","red"],"mappings":"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","file":"download-photos.js","sourcesContent":["import Task from './task';\nimport Client from '../../api/Client';\nimport Photo from '../../models/photo';\nimport {format} from 'util';\n\nexport default class DownloadPhotos extends Task {\n  constructor({form, ...args}) {\n    super(args);\n\n    this.form = form;\n  }\n\n  async run({account, dataSource}) {\n    await this.downloadPhotosPage(account, this.form, 1, null, this.form._lastSync);\n  }\n\n  async downloadPhotosPage(account, form, page, total, lastSync) {\n    const beginFetchTime = new Date();\n    const {db} = account;\n\n    this.progress({message: this.downloading + ' photos ' + this.form.name.blue + ' ' + format('page %s', page).yellow});\n\n    const results = await Client.getPhotos(account, form, page, lastSync);\n\n    const totalFetchTime = new Date().getTime() - beginFetchTime.getTime();\n\n    const data = JSON.parse(results.body);\n\n    const objects = data.photos;\n\n    let now = new Date();\n\n    this.progress({message: this.processing + ' photos ' + this.form.name.blue + ' ' + format('page %s/%s', page, data.total_pages || 1).yellow, count: 0, total: objects.length});\n\n    await db.transaction(async (database) => {\n      for (let index = 0; index < objects.length; ++index) {\n        const attributes = objects[index];\n\n        const object = await Photo.findOrCreate(database, {account_id: account.rowID, resource_id: attributes.access_key});\n\n        object.updateFromAPIAttributes(attributes);\n\n        if (attributes.processed) {\n          if (!object.isDownloaded) {\n            // queue.push(attributes, function(err) {\n            //   if (err) {\n            //     console.log('ERROR DOWNLOADING', err);\n            //     throw err;\n            //   }\n\n            //   object.isDownloaded = true;\n            //   // do we need to await this somehow?\n            //   object.save();\n            // });\n          }\n        } else {\n          object.isDownloaded = false;\n        }\n\n        if (object.isDownloaded == null) {\n          object.isDownloaded = false;\n        }\n\n        await object.save();\n\n        this.progress({message: this.processing + ' photos ' + this.form.name.blue + ' ' + format('page %s/%s', page, data.total_pages || 1).yellow, count: index + 1, total: objects.length});\n      }\n    });\n\n    const totalTime = new Date().getTime() - now.getTime();\n\n    const message = format(this.finished + ' photos %s | %s | %s | %s',\n                           form.name.blue,\n                           format('%s/%s', page, data.total_pages || 1).yellow,\n                           (totalFetchTime + 'ms').cyan,\n                           (totalTime + 'ms').red);\n\n    this.progress({message, count: objects.length, total: objects.length});\n\n    if (data.total_pages > page) {\n      await this.downloadPhotosPage(account, form, page + 1, data.total_pages, lastSync);\n    }\n  }\n}\n"]}