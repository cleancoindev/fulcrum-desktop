{"version":3,"sources":["../../../src/sync/tasks/download-all-records.js"],"names":["DownloadAllRecords","run","account","dataSource","forms","findActiveForms","form","Promise","resolve","reject","load","synchronizer","addTask","taskParams"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AACA;;AAEe,MAAMA,kBAAN,wBAAsC;AAC7CC,KAAN,CAAU,EAACC,OAAD,EAAUC,UAAV,EAAV,EAAiC;AAAA;;AAAA;AAC/B,YAAMC,QAAQ,MAAMF,QAAQG,eAAR,EAApB;;AAEA,WAAK,MAAMC,IAAX,IAAmBF,KAAnB,EAA0B;AACxB,cAAM,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrCH,eAAKI,IAAL,CAAUP,UAAV,EAAsBK,OAAtB;AACD,SAFK,CAAN;;AAIA,cAAKG,YAAL,CAAkBC,OAAlB,CAA0B,yCAAqBN,MAAMA,IAA3B,IAAoC,MAAKK,YAAL,CAAkBE,UAAtD,EAA1B;AACA;AACD;;AAED;AAZ+B;AAahC;AAdkD;kBAAhCb,kB","file":"download-all-records.js","sourcesContent":["import Task from './task';\nimport DownloadRecords from './download-records';\n// import DownloadPhotos from './download-photos';\n\nexport default class DownloadAllRecords extends Task {\n  async run({account, dataSource}) {\n    const forms = await account.findActiveForms();\n\n    for (const form of forms) {\n      await new Promise((resolve, reject) => {\n        form.load(dataSource, resolve);\n      });\n\n      this.synchronizer.addTask(new DownloadRecords({form: form, ...this.synchronizer.taskParams}));\n      // this.synchronizer.addTask(new DownloadPhotos({form: form, ...this.synchronizer.taskParams}));\n    }\n\n    // this.progress({message: this.finished + ' looking for records'});\n  }\n}\n"]}