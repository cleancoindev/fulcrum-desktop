{"version":3,"sources":["../../../src/main/commands/create-plugin.js"],"names":["runCommand","pluginPath","fulcrum","dir","files","commands","newPluginPath","join","args","name","push","file","sourcePath","resolve","__dirname","string","console","log","task","cli","command","desc","builder","type","required","handler"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe,MAAM;AAAA;AAAA,SAgBnBA,UAhBmB,qBAgBN,aAAY;AACvB,YAAMC,aAAaC,QAAQC,GAAR,CAAY,SAAZ,CAAnB;;AAEA,YAAMC,QAAQ,CACZ,cADY,EAEZ,WAFY,EAGZ,YAHY,CAAd;;AAMA,YAAMC,WAAW,EAAjB;;AAEA,YAAMC,gBAAgB,eAAKC,IAAL,CAAUN,UAAV,EAAsBC,QAAQM,IAAR,CAAaC,IAAnC,CAAtB;;AAEAJ,eAASK,IAAT,CAAe,YAAWJ,aAAc,EAAxC;;AAEA,WAAK,MAAMK,IAAX,IAAmBP,KAAnB,EAA0B;AACxB,cAAMQ,aAAa,eAAKC,OAAL,CAAa,eAAKN,IAAL,CAAUO,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,WAAvC,EAAoD,gBAApD,EAAsEH,IAAtE,CAAb,CAAnB;;AAEAN,iBAASK,IAAT,CAAe,MAAKE,UAAW,IAAGN,aAAc,EAAhD;AACD;;AAEDD,eAASK,IAAT,CAAe,MAAKJ,aAAc,EAAlC;AACAD,eAASK,IAAT,CAAc,MAAd;AACAL,eAASK,IAAT,CAAc,UAAd;;AAEA,YAAMK,SAASV,SAASE,IAAT,CAAc,MAAd,CAAf;;AAEAS,cAAQC,GAAR,CAAY,eAAZ;;AAEA,mCAASF,MAAT;;AAEAC,cAAQC,GAAR,CAAY,mBAAZ,EAAiC,eAAKV,IAAL,CAAUN,UAAV,EAAsBC,QAAQM,IAAR,CAAaC,IAAnC,CAAjC;AACAO,cAAQC,GAAR,CAAY,8BAAZ;AACAD,cAAQC,GAAR,CAAY,eAAef,QAAQM,IAAR,CAAaC,IAAxC;AACD,KAlDkB;AAAA;;AACbS,MAAN,CAAWC,GAAX,EAAgB;AAAA;;AAAA;AACd,aAAOA,IAAIC,OAAJ,CAAY;AACjBA,iBAAS,eADQ;AAEjBC,cAAM,qBAFW;AAGjBC,iBAAS;AACPb,gBAAM;AACJc,kBAAM,QADF;AAEJF,kBAAM,qBAFF;AAGJG,sBAAU;AAHN;AADC,SAHQ;AAUjBC,iBAAS,MAAKzB;AAVG,OAAZ,CAAP;AADc;AAaf;;AAdkB,C","file":"create-plugin.js","sourcesContent":["import path from 'path';\nimport { execSync } from 'child_process';\n\nexport default class {\n  async task(cli) {\n    return cli.command({\n      command: 'create-plugin',\n      desc: 'create a new plugin',\n      builder: {\n        name: {\n          type: 'string',\n          desc: 'the new plugin name',\n          required: true\n        }\n      },\n      handler: this.runCommand\n    });\n  }\n\n  runCommand = async () => {\n    const pluginPath = fulcrum.dir('plugins');\n\n    const files = [\n      'package.json',\n      'plugin.js',\n      '.gitignore'\n    ];\n\n    const commands = [];\n\n    const newPluginPath = path.join(pluginPath, fulcrum.args.name);\n\n    commands.push(`mkdir -p ${newPluginPath}`);\n\n    for (const file of files) {\n      const sourcePath = path.resolve(path.join(__dirname, '..', '..', '..', 'resources', 'default-plugin', file));\n\n      commands.push(`cp ${sourcePath} ${newPluginPath}`);\n    }\n\n    commands.push(`cd ${newPluginPath}`);\n    commands.push('yarn');\n    commands.push('git init');\n\n    const string = commands.join(' && ');\n\n    console.log('Installing...');\n\n    execSync(string);\n\n    console.log('Plugin created at', path.join(pluginPath, fulcrum.args.name));\n    console.log('Run the plugin task using:\\n');\n    console.log('  fulcrum ' + fulcrum.args.name);\n  }\n}\n"]}