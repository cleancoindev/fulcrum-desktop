{"version":3,"sources":["../../../src/main/commands/build-plugins.js"],"names":["runCommand","pluginPaths","sync","join","fulcrum","dir","pluginPath","pluginDir","resolve","dirname","commands","push","string","console","log","result","cwd","env","toString","ex","error","stderr","task","cli","command","desc","handler"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;;;kBAEe,MAAM;AAAA;AAAA,SASnBA,UATmB,qBASN,aAAY;AACvB,YAAMC,cAAc,eAAKC,IAAL,CAAU,eAAKC,IAAL,CAAUC,QAAQC,GAAR,CAAY,SAAZ,CAAV,EAAkC,GAAlC,EAAuC,WAAvC,CAAV,CAApB;;AAEA,WAAK,MAAMC,UAAX,IAAyBL,WAAzB,EAAsC;AACpC,cAAMM,YAAY,eAAKC,OAAL,CAAa,eAAKC,OAAL,CAAaH,UAAb,CAAb,CAAlB;;AAEA,cAAMI,WAAW,EAAjB;;AAEAA,iBAASC,IAAT,CAAc,MAAd;AACAD,iBAASC,IAAT,CAAc,YAAd;;AAEA,cAAMC,SAASF,SAASP,IAAT,CAAc,MAAd,CAAf;;AAEAU,gBAAQC,GAAR,CAAY,oBAAZ,EAAkCR,UAAlC;;AAEA,YAAI;AACF,gBAAMS,SAAS,6BAASH,MAAT,EAAiB,EAACI,KAAKT,SAAN,EAAiBU,wBAAjB,EAAjB,CAAf;AACAJ,kBAAQC,GAAR,CAAYC,OAAOG,QAAP,EAAZ;AACAL,kBAAQC,GAAR,CAAY,mBAAZ;AACD,SAJD,CAIE,OAAOK,EAAP,EAAW;AACXN,kBAAQO,KAAR,CAAc,uBAAd,EAAuCd,UAAvC,EAAmDa,GAAGE,MAAH,CAAUH,QAAV,EAAnD;AACD;AACF;AACF,KAhCkB;AAAA;;AACbI,MAAN,CAAWC,GAAX,EAAgB;AAAA;;AAAA;AACd,aAAOA,IAAIC,OAAJ,CAAY;AACjBA,iBAAS,eADQ;AAEjBC,cAAM,mBAFW;AAGjBC,iBAAS,MAAK1B;AAHG,OAAZ,CAAP;AADc;AAMf;;AAPkB,C","file":"build-plugins.js","sourcesContent":["import path from 'path';\nimport { execSync } from 'child_process';\nimport glob from 'glob';\nimport pluginEnv from '../plugin-env';\n\nexport default class {\n  async task(cli) {\n    return cli.command({\n      command: 'build-plugins',\n      desc: 'build all plugins',\n      handler: this.runCommand\n    });\n  }\n\n  runCommand = async () => {\n    const pluginPaths = glob.sync(path.join(fulcrum.dir('plugins'), '*', 'plugin.js'));\n\n    for (const pluginPath of pluginPaths) {\n      const pluginDir = path.resolve(path.dirname(pluginPath));\n\n      const commands = [];\n\n      commands.push('yarn');\n      commands.push('yarn build');\n\n      const string = commands.join(' && ');\n\n      console.log('Building plugin...', pluginPath);\n\n      try {\n        const result = execSync(string, {cwd: pluginDir, env: pluginEnv});\n        console.log(result.toString());\n        console.log('Plugin built.\\n\\n');\n      } catch (ex) {\n        console.error('Error building plugin', pluginPath, ex.stderr.toString());\n      }\n    }\n  }\n}\n"]}