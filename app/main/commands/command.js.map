{"version":3,"sources":["../../../src/main/commands/command.js"],"names":["longStackTraces","Command","setup","app","initialize","destroy","dispose","db","yargs","args","argv","fetchAccount","name","where","organization_name","accounts","findAll","createDataSource","account","dataSource","localDatabase","add","load","start","process","on","exit","run","err","console","error","stack"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;AAEA,mBAAQA,eAAR;;AAEe,MAAMC,OAAN,CAAc;AACrBC,OAAN,GAAc;AAAA;;AAAA;AACZ,YAAKC,GAAL;;AAEA,YAAM,MAAKA,GAAL,CAASC,UAAT,EAAN;AAHY;AAIb;;AAEKC,SAAN,GAAgB;AAAA;;AAAA;AACd,YAAM,OAAKF,GAAL,CAASG,OAAT,EAAN;AADc;AAEf;;AAED,MAAIC,EAAJ,GAAS;AACP,WAAO,KAAKJ,GAAL,CAASI,EAAhB;AACD;;AAED,MAAIC,KAAJ,GAAY;AACV;AACD;;AAED,MAAIC,IAAJ,GAAW;AACT,WAAO,gBAAMC,IAAb;AACD;;AAEKC,cAAN,CAAmBC,IAAnB,EAAyB;AAAA;;AAAA;AACvB,YAAMC,QAAQ,EAAd;;AAEA,UAAID,IAAJ,EAAU;AACRC,cAAMC,iBAAN,GAA0BF,IAA1B;AACD;;AAED,YAAMG,WAAW,MAAM,kBAAQC,OAAR,CAAgB,OAAKT,EAArB,EAAyBM,KAAzB,CAAvB;;AAEA,aAAOE,QAAP;AATuB;AAUxB;;AAEKE,kBAAN,CAAuBC,OAAvB,EAAgC;AAAA;;AAAA;AAC9B,UAAIC,aAAa,6BAAjB;;AAEA,YAAMC,gBAAgB,sCAA4BF,OAA5B,CAAtB;;AAEAC,iBAAWE,GAAX,CAAeD,aAAf;;AAEA,YAAMA,cAAcE,IAAd,CAAmB,OAAKf,EAAxB,CAAN;;AAEA,aAAOY,UAAP;AAT8B;AAU/B;;AAEKI,OAAN,GAAc;AAAA;;AAAA;AACZ,UAAI;AACF;AACAC,gBAAQC,EAAR,CAAW,QAAX,EAAqB,YAAW;AAC9BD,kBAAQE,IAAR;AACD,SAFD;;AAIA,cAAM,OAAKxB,KAAL,EAAN;AACA,cAAM,OAAKyB,GAAL,EAAN;AACA,cAAM,OAAKtB,OAAL,EAAN;AACD,OATD,CASE,OAAOuB,GAAP,EAAY;AACZC,gBAAQC,KAAR,CAAcF,IAAIG,KAAlB;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAM,OAAK1B,OAAL,EAAN;AACD;;AAED;AACAmB,cAAQE,IAAR;AAtBY;AAuBb;AAtE0B;kBAARzB,O","file":"command.js","sourcesContent":["import 'colors';\nimport yargs from 'yargs';\nimport Promise from 'bluebird';\nimport Account from '../models/account';\nimport { DataSource } from 'fulcrum-core';\nimport LocalDatabaseDataSource from '../local-database-data-source';\nimport app from '../app';\n\nPromise.longStackTraces();\n\nexport default class Command {\n  async setup() {\n    this.app = app;\n\n    await this.app.initialize();\n  }\n\n  async destroy() {\n    await this.app.dispose();\n  }\n\n  get db() {\n    return this.app.db;\n  }\n\n  get yargs() {\n    return yargs;\n  }\n\n  get args() {\n    return yargs.argv;\n  }\n\n  async fetchAccount(name) {\n    const where = {};\n\n    if (name) {\n      where.organization_name = name;\n    }\n\n    const accounts = await Account.findAll(this.db, where);\n\n    return accounts;\n  }\n\n  async createDataSource(account) {\n    let dataSource = new DataSource();\n\n    const localDatabase = new LocalDatabaseDataSource(account);\n\n    dataSource.add(localDatabase);\n\n    await localDatabase.load(this.db);\n\n    return dataSource;\n  }\n\n  async start() {\n    try {\n      // TODO(zhm) required or it hangs for ~30sec https://github.com/electron/electron/issues/4944\n      process.on('SIGINT', function() {\n        process.exit();\n      });\n\n      await this.setup();\n      await this.run();\n      await this.destroy();\n    } catch (err) {\n      console.error(err.stack);\n      // if (this.args.verbose) {\n      //   console.error(err.stack);\n      // } else {\n      //   console.error(err.message);\n      // }\n\n      await this.destroy();\n    }\n\n    // TODO(zhm) required or it hangs for ~30sec https://github.com/electron/electron/issues/4944\n    process.exit();\n  }\n}\n"]}