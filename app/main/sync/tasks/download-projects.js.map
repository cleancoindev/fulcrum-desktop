{"version":3,"sources":["../../../../src/main/sync/tasks/download-projects.js"],"names":["DownloadProjects","run","account","dataSource","sync","checkSyncState","needsUpdate","progress","message","downloading","response","getProjects","objects","JSON","parse","body","projects","processing","count","total","length","localObjects","findProjects","markDeletedObjects","index","attributes","object","findOrCreate","db","resource_id","id","account_id","rowID","updateFromAPIAttributes","_deletedAt","save","update","source","invalidate","finished"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEe,MAAMA,gBAAN,wBAAoC;AAC3CC,KAAN,CAAU,EAACC,OAAD,EAAUC,UAAV,EAAV,EAAiC;AAAA;;AAAA;AAC/B,YAAMC,OAAO,MAAM,MAAKC,cAAL,CAAoBH,OAApB,EAA6B,UAA7B,CAAnB;;AAEA,UAAI,CAACE,KAAKE,WAAV,EAAuB;AACrB;AACD;;AAED,YAAKC,QAAL,CAAc,EAACC,SAAS,MAAKC,WAAL,GAAmB,WAA7B,EAAd;;AAEA,YAAMC,WAAW,MAAM,iBAAOC,WAAP,CAAmBT,OAAnB,CAAvB;;AAEA,YAAMU,UAAUC,KAAKC,KAAL,CAAWJ,SAASK,IAApB,EAA0BC,QAA1C;;AAEA,YAAKT,QAAL,CAAc,EAACC,SAAS,MAAKS,UAAL,GAAkB,WAA5B,EAAyCC,OAAO,CAAhD,EAAmDC,OAAOP,QAAQQ,MAAlE,EAAd;;AAEA,YAAMC,eAAe,MAAMnB,QAAQoB,YAAR,EAA3B;;AAEA,YAAKC,kBAAL,CAAwBF,YAAxB,EAAsCT,OAAtC;;AAEA,WAAK,IAAIY,QAAQ,CAAjB,EAAoBA,QAAQZ,QAAQQ,MAApC,EAA4C,EAAEI,KAA9C,EAAqD;AACnD,cAAMC,aAAab,QAAQY,KAAR,CAAnB;;AAEA,cAAME,SAAS,MAAM,kBAAQC,YAAR,CAAqBzB,QAAQ0B,EAA7B,EAAiC,EAACC,aAAaJ,WAAWK,EAAzB,EAA6BC,YAAY7B,QAAQ8B,KAAjD,EAAjC,CAArB;;AAEAN,eAAOO,uBAAP,CAA+BR,UAA/B;;AAEAC,eAAOQ,UAAP,GAAoB,IAApB;;AAEA,cAAMR,OAAOS,IAAP,EAAN;;AAEA,cAAK5B,QAAL,CAAc,EAACC,SAAS,MAAKS,UAAL,GAAkB,WAA5B,EAAyCC,OAAOM,QAAQ,CAAxD,EAA2DL,OAAOP,QAAQQ,MAA1E,EAAd;AACD;;AAED,YAAMhB,KAAKgC,MAAL,EAAN;;AAEAjC,iBAAWkC,MAAX,CAAkBC,UAAlB,CAA6B,UAA7B;;AAEA,YAAK/B,QAAL,CAAc,EAACC,SAAS,MAAK+B,QAAL,GAAgB,WAA1B,EAAuCrB,OAAON,QAAQQ,MAAtD,EAA8DD,OAAOP,QAAQQ,MAA7E,EAAd;AArC+B;AAsChC;AAvCgD;kBAA9BpB,gB","file":"download-projects.js","sourcesContent":["import Task from './task';\nimport Client from '../../api/client';\nimport Project from '../../models/project';\n\nexport default class DownloadProjects extends Task {\n  async run({account, dataSource}) {\n    const sync = await this.checkSyncState(account, 'projects');\n\n    if (!sync.needsUpdate) {\n      return;\n    }\n\n    this.progress({message: this.downloading + ' projects'});\n\n    const response = await Client.getProjects(account);\n\n    const objects = JSON.parse(response.body).projects;\n\n    this.progress({message: this.processing + ' projects', count: 0, total: objects.length});\n\n    const localObjects = await account.findProjects();\n\n    this.markDeletedObjects(localObjects, objects);\n\n    for (let index = 0; index < objects.length; ++index) {\n      const attributes = objects[index];\n\n      const object = await Project.findOrCreate(account.db, {resource_id: attributes.id, account_id: account.rowID});\n\n      object.updateFromAPIAttributes(attributes);\n\n      object._deletedAt = null;\n\n      await object.save();\n\n      this.progress({message: this.processing + ' projects', count: index + 1, total: objects.length});\n    }\n\n    await sync.update();\n\n    dataSource.source.invalidate('projects');\n\n    this.progress({message: this.finished + ' projects', count: objects.length, total: objects.length});\n  }\n}\n"]}