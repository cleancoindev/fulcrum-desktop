{"version":3,"sources":["../../../src/main/db/database.js"],"names":["instance","defaultDatabaseOptions","wal","autoVacuum","synchronous","options","open","migrations","migrate","database"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAIA,WAAW,IAAf;;AAEA,MAAMC,yBAAyB;AAC7BC,OAAK,IADwB;AAE7BC,cAAY,IAFiB;AAG7BC,eAAa;AAHgB,CAA/B;;;+BAMe,WAAwBC,OAAxB,EAAiC;AAC9C,QAAIL,QAAJ,EAAc;AACZ,aAAOA,QAAP;AACD;;AAEDA,eAAW,MAAM,eAAOM,IAAP,cAAgBL,sBAAhB,EAA2CI,OAA3C,EAAjB;;AAEA,UAAME,aAAa,yBAAeP,QAAf,CAAnB;;AAEA,UAAMO,WAAWC,OAAX,EAAN;;AAEA,WAAOR,QAAP;AACD,G;;WAZ6BS,Q;;;;SAAAA,Q","file":"database.js","sourcesContent":["import { SQLite } from 'minidb';\nimport Migrations from './migrations';\n\nlet instance = null;\n\nconst defaultDatabaseOptions = {\n  wal: true,\n  autoVacuum: true,\n  synchronous: 'off'\n};\n\nexport default async function database(options) {\n  if (instance) {\n    return instance;\n  }\n\n  instance = await SQLite.open({...defaultDatabaseOptions, ...options});\n\n  const migrations = new Migrations(instance);\n\n  await migrations.migrate();\n\n  return instance;\n}\n"]}