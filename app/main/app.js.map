{"version":3,"sources":["../../src/main/app.js"],"names":["app","App","instance","constructor","_plugins","_pluginsByName","_listeners","_api","_rootDirectory","join","homedir","mkdirp","_environment","environment","api","yargs","args","argv","dir","name","sync","db","_db","on","func","push","off","index","indexOf","splice","emit","listener","initialize","file","safe","initializePlugins","dispose","plugin","deactivate","close","pluginPaths","pluginPath","fullPath","resolve","pluginModule","require","PluginClass","default","nameParts","dirname","split","sep","length","replace","debug","console","error","ex","activatePlugins","activate","fetchAccount","where","organization_name","accounts","findAll","createDataSource","account","dataSource","localDatabase","add","load","global","__app__","__api__","fulcrum"],"mappings":"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","file":"app.js","sourcesContent":["import glob from 'glob';\nimport path from 'path';\nimport yargs from 'yargs';\nimport mkdirp from 'mkdirp';\nimport os from 'os';\nimport database from './db/database';\nimport api from './api';\nimport Environment from './environment';\nimport Account from './models/account';\nimport LocalDatabaseDataSource from './local-database-data-source';\nimport { DataSource } from 'fulcrum-core';\n\nlet app = null;\n\nclass App {\n  static get instance() {\n    return app;\n  }\n\n  constructor() {\n    this._plugins = [];\n    this._pluginsByName = [];\n    this._listeners = {};\n    this._api = api;\n\n    // TODO(zhm) this needs to be adjusted for Windows and Linux\n    this._rootDirectory = path.join(os.homedir(), 'Documents', 'fulcrum-sync');\n\n    this.mkdirp('data');\n    this.mkdirp('plugins');\n    this.mkdirp('media');\n    this.mkdirp('reports');\n\n    this._environment = new Environment({app: this});\n  }\n\n  get environment() {\n    return this._environment;\n  }\n\n  get api() {\n    return this._api;\n  }\n\n  get yargs() {\n    return yargs;\n  }\n\n  get args() {\n    return this.yargs.argv;\n  }\n\n  dir(dir) {\n    return path.join(this._rootDirectory, dir);\n  }\n\n  mkdirp(name) {\n    mkdirp.sync(this.dir(name));\n  }\n\n  get db() {\n    return this._db;\n  }\n\n  on(name, func) {\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n\n    this._listeners[name].push(func);\n  }\n\n  off(name, func) {\n    if (this._listeners[name]) {\n      const index = this._listeners.indexOf(func);\n\n      if (index > -1) {\n        this._listeners.splice(index, 1);\n      }\n    }\n  }\n\n  async emit(name, ...args) {\n    if (this._listeners[name]) {\n      for (const listener of this._listeners[name]) {\n        await listener(...args);\n      }\n    }\n  }\n\n  async initialize() {\n    const file = path.join(this.dir('data'), 'fulcrum.db');\n\n    this._db = await database({file});\n\n    if (!this.args.safe) {\n      await this.initializePlugins();\n    }\n  }\n\n  async dispose() {\n    for (const plugin of this._plugins) {\n      if (plugin.deactivate) {\n        await plugin.deactivate();\n      }\n    }\n\n    await this._db.close();\n  }\n\n  async initializePlugins() {\n    const pluginPaths = glob.sync(path.join(this.dir('plugins'), '*'));\n\n    for (const pluginPath of pluginPaths) {\n      const fullPath = path.resolve(pluginPath);\n\n      try {\n        const pluginModule = require(fullPath);\n\n        const PluginClass = pluginModule.default || pluginModule;\n\n        const plugin = new PluginClass();\n\n        const nameParts = path.dirname(fullPath).split(path.sep);\n        const name = nameParts[nameParts.length - 1].replace(/^fulcrum-sync-/, '');\n\n        this._pluginsByName[name] = plugin;\n        this._plugins.push(plugin);\n\n        if (this.args.debug) {\n          console.error('Loading plugin', fullPath);\n        }\n      } catch (ex) {\n        console.error('Failed to load plugin', ex);\n      }\n    }\n  }\n\n  async activatePlugins() {\n    for (const plugin of this._plugins) {\n      await plugin.activate();\n    }\n  }\n\n  async fetchAccount(name) {\n    const where = {};\n\n    if (name) {\n      where.organization_name = name;\n    }\n\n    const accounts = await Account.findAll(this.db, where);\n\n    return accounts[0];\n  }\n\n  async createDataSource(account) {\n    let dataSource = new DataSource();\n\n    const localDatabase = new LocalDatabaseDataSource(account);\n\n    dataSource.add(localDatabase);\n\n    await localDatabase.load(this.db);\n\n    return dataSource;\n  }\n}\n\napp = new App();\n\nEnvironment.app = app;\n\nglobal.__app__ = app;\nglobal.__api__ = api;\nglobal.fulcrum = app.environment;\n\nexport default app;\n"]}