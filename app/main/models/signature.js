'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _minidb = require('minidb');

var _fulcrumCore = require('fulcrum-core');

class Signature {
  static get tableName() {
    return 'signatures';
  }

  static get columns() {
    return [{ name: 'accountRowID', column: 'account_id', type: 'integer', null: false }, { name: 'id', column: 'resource_id', type: 'string', null: false }, { name: 'filePath', column: 'file_path', type: 'string' }, { name: 'fileSize', column: 'file_size', type: 'integer' }, { name: 'contentType', column: 'content_type', type: 'string' }, { name: 'isDownloaded', column: 'is_downloaded', type: 'boolean', null: false }, { name: 'isUploaded', column: 'is_uploaded', type: 'boolean', null: false }, { name: 'isStored', column: 'is_stored', type: 'boolean', null: false }, { name: 'isProcessed', column: 'is_processed', type: 'boolean', null: false }, { name: 'formRowID', column: 'form_id', type: 'integer' }, { name: 'formID', column: 'form_resource_id', type: 'string' }, { name: 'recordRowID', column: 'record_id', type: 'integer' }, { name: 'recordID', column: 'record_resource_id', type: 'string' }, { name: 'updatedByRowID', column: 'updated_by_id', type: 'integer' }, { name: 'updatedByID', column: 'updated_by_resource_id', type: 'string' }, { name: 'createdByRowID', column: 'created_by_id', type: 'integer' }, { name: 'createdByID', column: 'created_by_resource_id', type: 'string' }, { name: 'createdAt', column: 'server_created_at', type: 'datetime' }, { name: 'updatedAt', column: 'server_updated_at', type: 'datetime' }];
  }

  get id() {
    return this._id;
  }

  updateFromAPIAttributes(attributes) {
    this._id = attributes.access_key;
    this._fileSize = attributes.file_size;
    this._isUploaded = attributes.uploaded;
    this._isStored = attributes.stored;
    this._isProcessed = attributes.processed;
    this._contentType = attributes.content_type;
    this._createdByID = attributes.created_by_id;
    this._updatedByID = attributes.updated_by_id;
    this._createdAt = _fulcrumCore.DateUtils.parseISOTimestamp(attributes.created_at);
    this._updatedAt = _fulcrumCore.DateUtils.parseISOTimestamp(attributes.updated_at);
    this._formID = attributes.form_id;
    this._recordID = attributes.record_id;
  }

  get isDownloaded() {
    return this._isDownloaded;
  }

  set isDownloaded(value) {
    this._isDownloaded = !!value;
  }

  get createdAt() {
    return this._createdAt;
  }

  get updatedAt() {
    return this._updatedAt;
  }
}

exports.default = Signature;
_minidb.PersistentObject.register(Signature);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYWluL21vZGVscy9zaWduYXR1cmUuanMiXSwibmFtZXMiOlsiU2lnbmF0dXJlIiwidGFibGVOYW1lIiwiY29sdW1ucyIsIm5hbWUiLCJjb2x1bW4iLCJ0eXBlIiwibnVsbCIsImlkIiwiX2lkIiwidXBkYXRlRnJvbUFQSUF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiYWNjZXNzX2tleSIsIl9maWxlU2l6ZSIsImZpbGVfc2l6ZSIsIl9pc1VwbG9hZGVkIiwidXBsb2FkZWQiLCJfaXNTdG9yZWQiLCJzdG9yZWQiLCJfaXNQcm9jZXNzZWQiLCJwcm9jZXNzZWQiLCJfY29udGVudFR5cGUiLCJjb250ZW50X3R5cGUiLCJfY3JlYXRlZEJ5SUQiLCJjcmVhdGVkX2J5X2lkIiwiX3VwZGF0ZWRCeUlEIiwidXBkYXRlZF9ieV9pZCIsIl9jcmVhdGVkQXQiLCJwYXJzZUlTT1RpbWVzdGFtcCIsImNyZWF0ZWRfYXQiLCJfdXBkYXRlZEF0IiwidXBkYXRlZF9hdCIsIl9mb3JtSUQiLCJmb3JtX2lkIiwiX3JlY29yZElEIiwicmVjb3JkX2lkIiwiaXNEb3dubG9hZGVkIiwiX2lzRG93bmxvYWRlZCIsInZhbHVlIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUVlLE1BQU1BLFNBQU4sQ0FBZ0I7QUFDN0IsYUFBV0MsU0FBWCxHQUF1QjtBQUNyQixXQUFPLFlBQVA7QUFDRDs7QUFFRCxhQUFXQyxPQUFYLEdBQXFCO0FBQ25CLFdBQU8sQ0FDTCxFQUFFQyxNQUFNLGNBQVIsRUFBd0JDLFFBQVEsWUFBaEMsRUFBOENDLE1BQU0sU0FBcEQsRUFBK0RDLE1BQU0sS0FBckUsRUFESyxFQUVMLEVBQUVILE1BQU0sSUFBUixFQUFjQyxRQUFRLGFBQXRCLEVBQXFDQyxNQUFNLFFBQTNDLEVBQXFEQyxNQUFNLEtBQTNELEVBRkssRUFHTCxFQUFFSCxNQUFNLFVBQVIsRUFBb0JDLFFB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S0FBdkI7QUFDRDs7QUFFRCxNQUFJQyxTQUFKLEdBQWdCO0FBQ2QsV0FBTyxLQUFLWixVQUFaO0FBQ0Q7O0FBRUQsTUFBSWEsU0FBSixHQUFnQjtBQUNkLFdBQU8sS0FBS1YsVUFBWjtBQUNEO0FBOUQ0Qjs7a0JBQVY3QixTO0FBaUVyQix5QkFBaUJ3QyxRQUFqQixDQUEwQnhDLFNBQTFCIiwiZmlsZSI6InNpZ25hdHVyZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBlcnNpc3RlbnRPYmplY3QgfSBmcm9tICdtaW5pZGInO1xuaW1wb3J0IHsgRGF0ZVV0aWxzIH0gZnJvbSAnZnVsY3J1bS1jb3JlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2lnbmF0dXJlIHtcbiAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgcmV0dXJuICdzaWduYXR1cmVzJztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgY29sdW1ucygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyBuYW1lOiAnYWNjb3VudFJvd0lEJywgY29sdW1uOiAnYWNjb3VudF9pZCcsIHR5cGU6ICdpbnRlZ2VyJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2lkJywgY29sdW1uOiAncmVzb3VyY2VfaWQnLCB0eXBlOiAnc3RyaW5nJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2ZpbGVQYXRoJywgY29sdW1uOiAnZmlsZV9wYXRoJywgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgIHsgbmFtZTogJ2ZpbGVTaXplJywgY29sdW1uOiAnZmlsZV9zaXplJywgdHlwZTogJ2ludGVnZXInIH0sXG4gICAgICB7IG5hbWU6ICdjb250ZW50VHlwZScsIGNvbHVtbjogJ2NvbnRlbnRfdHlwZScsIHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgICB7IG5hbWU6ICdpc0Rvd25sb2FkZWQnLCBjb2x1bW46ICdpc19kb3dubG9hZGVkJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnaXNVcGxvYWRlZCcsIGNvbHVtbjogJ2lzX3VwbG9hZGVkJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnaXNTdG9yZWQnLCBjb2x1bW46ICdpc19zdG9yZWQnLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdpc1Byb2Nlc3NlZCcsIGNvbHVtbjogJ2lzX3Byb2Nlc3NlZCcsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2Zvcm1Sb3dJRCcsIGNvbHVtbjogJ2Zvcm1faWQnLCB0eXBlOiAnaW50ZWdlcicgfSxcbiAgICAgIHsgbmFtZTogJ2Zvcm1JRCcsIGNvbHVtbjogJ2Zvcm1fcmVzb3VyY2VfaWQnLCB0eXBlOiAnc3RyaW5nJyB9LFxuICAgICAgeyBuYW1lOiAncmVjb3JkUm93SUQnLCBjb2x1bW46ICdyZWNvcmRfaWQnLCB0eXBlOiAnaW50ZWdlcicgfSxcbiAgICAgIHsgbmFtZTogJ3JlY29yZElEJywgY29sdW1uOiAncmVjb3JkX3Jlc291cmNlX2lkJywgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgIHsgbmFtZTogJ3VwZGF0ZWRCeVJvd0lEJywgY29sdW1uOiAndXBkYXRlZF9ieV9pZCcsIHR5cGU6ICdpbnRlZ2VyJyB9LFxuICAgICAgeyBuYW1lOiAndXBkYXRlZEJ5SUQnLCBjb2x1bW46ICd1cGRhdGVkX2J5X3Jlc291cmNlX2lkJywgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgIHsgbmFtZTogJ2NyZWF0ZWRCeVJvd0lEJywgY29sdW1uOiAnY3JlYXRlZF9ieV9pZCcsIHR5cGU6ICdpbnRlZ2VyJyB9LFxuICAgICAgeyBuYW1lOiAnY3JlYXRlZEJ5SUQnLCBjb2x1bW46ICdjcmVhdGVkX2J5X3Jlc291cmNlX2lkJywgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgIHsgbmFtZTogJ2NyZWF0ZWRBdCcsIGNvbHVtbjogJ3NlcnZlcl9jcmVhdGVkX2F0JywgdHlwZTogJ2RhdGV0aW1lJyB9LFxuICAgICAgeyBuYW1lOiAndXBkYXRlZEF0JywgY29sdW1uOiAnc2VydmVyX3VwZGF0ZWRfYXQnLCB0eXBlOiAnZGF0ZXRpbWUnIH1cbiAgICBdO1xuICB9XG5cbiAgZ2V0IGlkKCkge1xuICAgIHJldHVybiB0aGlzLl9pZDtcbiAgfVxuXG4gIHVwZGF0ZUZyb21BUElBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpIHtcbiAgICB0aGlzLl9pZCA9IGF0dHJpYnV0ZXMuYWNjZXNzX2tleTtcbiAgICB0aGlzLl9maWxlU2l6ZSA9IGF0dHJpYnV0ZXMuZmlsZV9zaXplO1xuICAgIHRoaXMuX2lzVXBsb2FkZWQgPSBhdHRyaWJ1dGVzLnVwbG9hZGVkO1xuICAgIHRoaXMuX2lzU3RvcmVkID0gYXR0cmlidXRlcy5zdG9yZWQ7XG4gICAgdGhpcy5faXNQcm9jZXNzZWQgPSBhdHRyaWJ1dGVzLnByb2Nlc3NlZDtcbiAgICB0aGlzLl9jb250ZW50VHlwZSA9IGF0dHJpYnV0ZXMuY29udGVudF90eXBlO1xuICAgIHRoaXMuX2NyZWF0ZWRCeUlEID0gYXR0cmlidXRlcy5jcmVhdGVkX2J5X2lkO1xuICAgIHRoaXMuX3VwZGF0ZWRCeUlEID0gYXR0cmlidXRlcy51cGRhdGVkX2J5X2lkO1xuICAgIHRoaXMuX2NyZWF0ZWRBdCA9IERhdGVVdGlscy5wYXJzZUlTT1RpbWVzdGFtcChhdHRyaWJ1dGVzLmNyZWF0ZWRfYXQpO1xuICAgIHRoaXMuX3VwZGF0ZWRBdCA9IERhdGVVdGlscy5wYXJzZUlTT1RpbWVzdGFtcChhdHRyaWJ1dGVzLnVwZGF0ZWRfYXQpO1xuICAgIHRoaXMuX2Zvcm1JRCA9IGF0dHJpYnV0ZXMuZm9ybV9pZDtcbiAgICB0aGlzLl9yZWNvcmRJRCA9IGF0dHJpYnV0ZXMucmVjb3JkX2lkO1xuICB9XG5cbiAgZ2V0IGlzRG93bmxvYWRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faXNEb3dubG9hZGVkO1xuICB9XG5cbiAgc2V0IGlzRG93bmxvYWRlZCh2YWx1ZSkge1xuICAgIHRoaXMuX2lzRG93bmxvYWRlZCA9ICEhdmFsdWU7XG4gIH1cblxuICBnZXQgY3JlYXRlZEF0KCkge1xuICAgIHJldHVybiB0aGlzLl9jcmVhdGVkQXQ7XG4gIH1cblxuICBnZXQgdXBkYXRlZEF0KCkge1xuICAgIHJldHVybiB0aGlzLl91cGRhdGVkQXQ7XG4gIH1cbn1cblxuUGVyc2lzdGVudE9iamVjdC5yZWdpc3RlcihTaWduYXR1cmUpO1xuIl19