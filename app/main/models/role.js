'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _minidb = require('minidb');

var _fulcrumCore = require('fulcrum-core');

class Role extends _fulcrumCore.Role {
  static get tableName() {
    return 'roles';
  }

  static get columns() {
    return [{ name: 'accountRowID', column: 'account_id', type: 'integer', null: false }, { name: 'id', column: 'resource_id', type: 'string', null: false }, { name: 'name', column: 'name', type: 'string', null: false }, { name: 'isSystem', column: 'is_system', type: 'boolean', null: false }, { name: 'isDefault', column: 'is_default', type: 'boolean', null: false }, { name: 'canManageSubscription', column: 'can_manage_subscription', type: 'boolean', null: false }, { name: 'canUpdateOrganization', column: 'can_update_organization', type: 'boolean', null: false }, { name: 'canManageMembers', column: 'can_manage_members', type: 'boolean', null: false }, { name: 'canManageRoles', column: 'can_manage_roles', type: 'boolean', null: false }, { name: 'canManageApps', column: 'can_manage_apps', type: 'boolean', null: false }, { name: 'canManageProjects', column: 'can_manage_projects', type: 'boolean', null: false }, { name: 'canManageChoiceLists', column: 'can_manage_choice_lists', type: 'boolean', null: false }, { name: 'canManageClassificationSets', column: 'can_manage_classification_sets', type: 'boolean', null: false }, { name: 'canCreateRecords', column: 'can_create_records', type: 'boolean', null: false }, { name: 'canUpdateRecords', column: 'can_update_records', type: 'boolean', null: false }, { name: 'canDeleteRecords', column: 'can_delete_records', type: 'boolean', null: false }, { name: 'canChangeStatus', column: 'can_change_status', type: 'boolean', null: false }, { name: 'canChangeProject', column: 'can_change_project', type: 'boolean', null: false }, { name: 'canAssignRecords', column: 'can_assign_records', type: 'boolean', null: false }, { name: 'canImportRecords', column: 'can_import_records', type: 'boolean', null: false }, { name: 'canExportRecords', column: 'can_export_records', type: 'boolean', null: false }, { name: 'canRunReports', column: 'can_run_reports', type: 'boolean', null: false }, { name: 'canManageLayers', column: 'can_manage_layers', type: 'boolean', null: false }, { name: 'canManageAuthorizations', column: 'can_manage_authorizations', type: 'boolean', null: false }, { name: 'createdAt', column: 'server_created_at', type: 'datetime' }, { name: 'updatedAt', column: 'server_updated_at', type: 'datetime' }, { name: 'deletedAt', column: 'deleted_at', type: 'datetime' }];
  }
}

exports.default = Role;
_minidb.PersistentObject.register(Role);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYWluL21vZGVscy9yb2xlLmpzIl0sIm5hbWVzIjpbIlJvbGUiLCJ0YWJsZU5hbWUiLCJjb2x1bW5zIiwibmFtZSIsImNvbHVtbiIsInR5cGUiLCJudWxsIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUVlLE1BQU1BLElBQU4sMkJBQTRCO0FBQ3pDLGFBQVdDLFNBQVgsR0FBdUI7QUFDckIsV0FBTyxPQUFQO0FBQ0Q7O0FBRUQsYUFBV0MsT0FBWCxHQUFxQjtBQUNuQixXQUFPLENBQ0wsRUFBRUMsTUFBTSxjQUFSLEVBQXdCQyxRQUFRLFlBQWhDLEVBQThDQyxNQUFNLFNBQXBELEVBQStEQyxNQUFNLEtBQXJFLEVBREssRUFFTCxFQUFFSCxNQUFNLElBQVIsRUFBY0MsUUFBUSxhQUF0QixFQUFxQ0MsTUFBTSxRQUEzQyxFQUFxREMsTUFBTSxLQUEzRCxFQUZLLEVBR0wsRUFBRUgsTUFBTSxNQUFSLEVBQWdCQyxRQUFRLE1BQXhCLEVBQWdDQyxNQUFNLFFBQXRDLEVBQWdEQyxNQUFNLEtBQXRELEVBSEssRUFJTCxFQUFFSCxNQUFNLFVBQVIsRUFBb0JDLFFBQVEsV0FBNUIsRUFBeUNDLE1BQU0sU0FBL0MsRUFBMERDLE1BQU0sS0FBaEUsRUFKSyxFQUtMLEVBQUVILE1BQU0sV0FBUixFQUFxQkMsUUFBUSxZQUE3QixFQUEyQ0MsTUFBTSxTQUFqRCxFQUE0REMsTUFBTSxLQUFsRSxFQUxLLEVBTUwsRUFBRUgsTUFBTSx1QkFBUixFQUFpQ0MsUUFBUSx5QkFBekMsRUFBb0VDLE1BQU0sU0FBMUUsRUFBcUZDLE1BQU0sS0FBM0YsRUFOSyxFQU9MLEVBQUVILE1BQU0sdUJBQVIsRUFBaUNDLFFBQVEseUJBQXpDLEVBQW9FQyxNQUFNLFNBQTFFLEVBQXFGQyxNQUFNLEtBQTNGLEVBUEssRUFRTCxFQUFFSCxNQUFNLGtCQUFSLEVBQTRCQyxRQUFRLG9CQUFwQyxFQUEwREMsTUFBTSxTQUFoRSxFQUEyRUMsTUFBTSxLQUFqRixFQVJLLEVBU0wsRUFBRUgsTUFBTSxnQkFBUixFQUEwQkMsUUFBUSxrQkFBbEMsRUFBc0RDLE1BQU0sU0FBNUQsRUFBdUVDLE1BQU0sS0FBN0UsRUFUSyxFQVVMLEVBQUVILE1BQU0sZUFBUixFQUF5QkMsUUFBUSxpQkFBakMsRUFBb0RDLE1BQU0sU0FBMUQsRUFBcUVDLE1BQU0sS0FBM0UsRUFWSyxFQVdMLEVBQUVILE1BQU0sbUJBQVIsRUFBNkJDLFFBQVEscUJBQXJDLEVBQTREQyxNQUFNLFNBQWxFLEVBQTZFQyxNQUFNLEtBQW5GLEVBWEssRUFZTCxFQUFFSCxNQUFNLHNCQUFSLEVBQWdDQyxRQUFRLHlCQUF4QyxFQUFtRUMsTUFBTSxTQUF6RSxFQUFvRkMsTUFBTSxLQUExRixFQVpLLEVBYUwsRUFBRUgsTUFBTSw2QkFBUixFQUF1Q0MsUUFBUSxnQ0FBL0MsRUFBaUZDLE1BQU0sU0FBdkYsRUFBa0dDLE1BQU0sS0FBeEcsRUFiSyxFQWNMLEVBQUVILE1BQU0sa0JBQVIsRUFBNEJDLFFBQVEsb0JBQXBDLEVBQTBEQyxNQUFNLFNBQWhFLEVBQTJFQyxNQUFNLEtBQWpGLEVBZEssRUFlTCxFQUFFSCxNQUFNLGtCQUFSLEVBQTRCQyxRQUFRLG9CQUFwQyxFQUEwREMsTUFBTSxTQUFoRSxFQUEyRUMsTUFBTSxLQUFqRixFQWZLLEVBZ0JMLEVBQUVILE1BQU0sa0JBQVIsRUFBNEJDLFFBQVEsb0JBQXBDLEVBQTBEQyxNQUFNLFNBQWhFLEVBQTJFQyxNQUFNLEtBQWpGLEVBaEJLLEVBaUJMLEVBQUVILE1BQU0saUJBQVIsRUFBMkJDLFFBQVEsbUJBQW5DLEVBQXdEQyxNQUFNLFNBQTlELEVBQXlFQyxNQUFNLEtBQS9FLEVBakJLLEVBa0JMLEVBQUVILE1BQU0sa0JBQVIsRUFBNEJDLFFBQVEsb0JBQXBDLEVBQTBEQyxNQUFNLFNBQWhFLEVBQTJFQyxNQUFNLEtBQWpGLEVBbEJLLEVBbUJMLEVBQUVILE1BQU0sa0JBQVIsRUFBNEJDLFFBQVEsb0JBQXBDLEVBQTBEQyxNQUFNLFNBQWhFLEVBQTJFQyxNQUFNLEtBQWpGLEVBbkJLLEVBb0JMLEVBQUVILE1BQU0sa0JBQVIsRUFBNEJDLFFBQVEsb0JBQXBDLEVBQTBEQyxNQUFNLFNBQWhFLEVBQTJFQyxNQUFNLEtBQWpGLEVBcEJLLEVBcUJMLEVBQUVILE1BQU0sa0JBQVIsRUFBNEJDLFFBQVEsb0JBQXBDLEVBQTBEQyxNQUFNLFNBQWhFLEVBQTJFQyxNQUFNLEtBQWpGLEVBckJLLEVBc0JMLEVBQUVILE1BQU0sZUFBUixFQUF5QkMsUUFBUSxpQkFBakMsRUFBb0RDLE1BQU0sU0FBMUQsRUFBcUVDLE1BQU0sS0FBM0UsRUF0QkssRUF1QkwsRUFBRUgsTUFBTSxpQkFBUixFQUEyQkMsUUFBUSxtQkFBbkMsRUFBd0RDLE1BQU0sU0FBOUQsRUFBeUVDLE1BQU0sS0FBL0UsRUF2QkssRUF3QkwsRUFBRUgsTUFBTSx5QkFBUixFQUFtQ0MsUUFBUSwyQkFBM0MsRUFBd0VDLE1BQU0sU0FBOUUsRUFBeUZDLE1BQU0sS0FBL0YsRUF4QkssRUF5QkwsRUFBRUgsTUFBTSxXQUFSLEVBQXFCQyxRQUFRLG1CQUE3QixFQUFrREMsTUFBTSxVQUF4RCxFQXpCSyxFQTBCTCxFQUFFRixNQUFNLFdBQVIsRUFBcUJDLFFBQVEsbUJBQTdCLEVBQWtEQyxNQUFNLFVBQXhELEVBMUJLLEVBMkJMLEVBQUVGLE1BQU0sV0FBUixFQUFxQkMsUUFBUSxZQUE3QixFQUEyQ0MsTUFBTSxVQUFqRCxFQTNCSyxDQUFQO0FBNkJEO0FBbkN3Qzs7a0JBQXRCTCxJO0FBc0NyQix5QkFBaUJPLFFBQWpCLENBQTBCUCxJQUExQiIsImZpbGUiOiJyb2xlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGVyc2lzdGVudE9iamVjdCB9IGZyb20gJ21pbmlkYic7XG5pbXBvcnQgeyBSb2xlIGFzIFJvbGVCYXNlIH0gZnJvbSAnZnVsY3J1bS1jb3JlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm9sZSBleHRlbmRzIFJvbGVCYXNlIHtcbiAgc3RhdGljIGdldCB0YWJsZU5hbWUoKSB7XG4gICAgcmV0dXJuICdyb2xlcyc7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGNvbHVtbnMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIHsgbmFtZTogJ2FjY291bnRSb3dJRCcsIGNvbHVtbjogJ2FjY291bnRfaWQnLCB0eXBlOiAnaW50ZWdlcicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdpZCcsIGNvbHVtbjogJ3Jlc291cmNlX2lkJywgdHlwZTogJ3N0cmluZycsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICduYW1lJywgY29sdW1uOiAnbmFtZScsIHR5cGU6ICdzdHJpbmcnLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnaXNTeXN0ZW0nLCBjb2x1bW46ICdpc19zeXN0ZW0nLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdpc0RlZmF1bHQnLCBjb2x1bW46ICdpc19kZWZhdWx0JywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnY2FuTWFuYWdlU3Vic2NyaXB0aW9uJywgY29sdW1uOiAnY2FuX21hbmFnZV9zdWJzY3JpcHRpb24nLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdjYW5VcGRhdGVPcmdhbml6YXRpb24nLCBjb2x1bW46ICdjYW5fdXBkYXRlX29yZ2FuaXphdGlvbicsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2Nhbk1hbmFnZU1lbWJlcnMnLCBjb2x1bW46ICdjYW5fbWFuYWdlX21lbWJlcnMnLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdjYW5NYW5hZ2VSb2xlcycsIGNvbHVtbjogJ2Nhbl9tYW5hZ2Vfcm9sZXMnLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdjYW5NYW5hZ2VBcHBzJywgY29sdW1uOiAnY2FuX21hbmFnZV9hcHBzJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnY2FuTWFuYWdlUHJvamVjdHMnLCBjb2x1bW46ICdjYW5fbWFuYWdlX3Byb2plY3RzJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnY2FuTWFuYWdlQ2hvaWNlTGlzdHMnLCBjb2x1bW46ICdjYW5fbWFuYWdlX2Nob2ljZV9saXN0cycsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2Nhbk1hbmFnZUNsYXNzaWZpY2F0aW9uU2V0cycsIGNvbHVtbjogJ2Nhbl9tYW5hZ2VfY2xhc3NpZmljYXRpb25fc2V0cycsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2NhbkNyZWF0ZVJlY29yZHMnLCBjb2x1bW46ICdjYW5fY3JlYXRlX3JlY29yZHMnLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdjYW5VcGRhdGVSZWNvcmRzJywgY29sdW1uOiAnY2FuX3VwZGF0ZV9yZWNvcmRzJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnY2FuRGVsZXRlUmVjb3JkcycsIGNvbHVtbjogJ2Nhbl9kZWxldGVfcmVjb3JkcycsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2NhbkNoYW5nZVN0YXR1cycsIGNvbHVtbjogJ2Nhbl9jaGFuZ2Vfc3RhdHVzJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnY2FuQ2hhbmdlUHJvamVjdCcsIGNvbHVtbjogJ2Nhbl9jaGFuZ2VfcHJvamVjdCcsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2NhbkFzc2lnblJlY29yZHMnLCBjb2x1bW46ICdjYW5fYXNzaWduX3JlY29yZHMnLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdjYW5JbXBvcnRSZWNvcmRzJywgY29sdW1uOiAnY2FuX2ltcG9ydF9yZWNvcmRzJywgdHlwZTogJ2Jvb2xlYW4nLCBudWxsOiBmYWxzZSB9LFxuICAgICAgeyBuYW1lOiAnY2FuRXhwb3J0UmVjb3JkcycsIGNvbHVtbjogJ2Nhbl9leHBvcnRfcmVjb3JkcycsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2NhblJ1blJlcG9ydHMnLCBjb2x1bW46ICdjYW5fcnVuX3JlcG9ydHMnLCB0eXBlOiAnYm9vbGVhbicsIG51bGw6IGZhbHNlIH0sXG4gICAgICB7IG5hbWU6ICdjYW5NYW5hZ2VMYXllcnMnLCBjb2x1bW46ICdjYW5fbWFuYWdlX2xheWVycycsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2Nhbk1hbmFnZUF1dGhvcml6YXRpb25zJywgY29sdW1uOiAnY2FuX21hbmFnZV9hdXRob3JpemF0aW9ucycsIHR5cGU6ICdib29sZWFuJywgbnVsbDogZmFsc2UgfSxcbiAgICAgIHsgbmFtZTogJ2NyZWF0ZWRBdCcsIGNvbHVtbjogJ3NlcnZlcl9jcmVhdGVkX2F0JywgdHlwZTogJ2RhdGV0aW1lJyB9LFxuICAgICAgeyBuYW1lOiAndXBkYXRlZEF0JywgY29sdW1uOiAnc2VydmVyX3VwZGF0ZWRfYXQnLCB0eXBlOiAnZGF0ZXRpbWUnIH0sXG4gICAgICB7IG5hbWU6ICdkZWxldGVkQXQnLCBjb2x1bW46ICdkZWxldGVkX2F0JywgdHlwZTogJ2RhdGV0aW1lJyB9XG4gICAgXTtcbiAgfVxufVxuXG5QZXJzaXN0ZW50T2JqZWN0LnJlZ2lzdGVyKFJvbGUpO1xuIl19